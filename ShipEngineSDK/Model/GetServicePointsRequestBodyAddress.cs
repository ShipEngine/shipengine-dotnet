/*
 * ShipEngine API
 *
 * The version of the OpenAPI document: 1.1.202406212006
 * Contact: sales@shipengine.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Text.Json.Serialization.Metadata;
using System.Text.RegularExpressions;

namespace ShipEngineSDK.Model;

/// <summary>
/// Structured address to search by.
/// </summary>
public partial class GetServicePointsRequestBodyAddress
{

    /// <summary>
    /// The first line of the street address. For some addresses, this may be the only line. Other addresses may require 2 or 3 lines.
    /// </summary>
    /// <value>The first line of the street address. For some addresses, this may be the only line. Other addresses may require 2 or 3 lines.</value>
    /// <example>
    /// 1999 Bishop Grandin Blvd.
    /// </example>
    [JsonPropertyName("address_line1")]
    public string AddressLine1 { get; set; }

    /// <summary>
    /// Gets or Sets AddressLine2
    /// </summary>
    [JsonPropertyName("address_line2")]
    public string AddressLine2 { get; set; }

    /// <summary>
    /// Gets or Sets AddressLine3
    /// </summary>
    [JsonPropertyName("address_line3")]
    public string AddressLine3 { get; set; }

    /// <summary>
    /// The name of the city or locality
    /// </summary>
    /// <value>The name of the city or locality</value>
    [JsonPropertyName("city_locality")]
    public string CityLocality { get; set; }

    /// <summary>
    /// The state or province. For some countries (including the U.S.) only abbreviations are allowed. Other countries allow the full name or abbreviation.
    /// </summary>
    /// <value>The state or province. For some countries (including the U.S.) only abbreviations are allowed. Other countries allow the full name or abbreviation.</value>
    [JsonPropertyName("state_province")]
    public string StateProvince { get; set; }

    /// <summary>
    /// postal code
    /// </summary>
    /// <value>postal code</value>
    /// <example>
    /// 78756-3717
    /// </example>
    [JsonPropertyName("postal_code")]
    public string PostalCode { get; set; }

    /// <summary>
    /// A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) 
    /// </summary>
    /// <value>A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) </value>
    /// <example>
    /// CA
    /// </example>
    [JsonPropertyName("country_code")]
    [JsonRequired]
    public string CountryCode { get; set; }


    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        StringBuilder sb = new StringBuilder();
        sb.Append("class GetServicePointsRequestBodyAddress {\n");
        sb.Append("  AddressLine1: ").Append(AddressLine1).Append("\n");
        sb.Append("  AddressLine2: ").Append(AddressLine2).Append("\n");
        sb.Append("  AddressLine3: ").Append(AddressLine3).Append("\n");
        sb.Append("  CityLocality: ").Append(CityLocality).Append("\n");
        sb.Append("  StateProvince: ").Append(StateProvince).Append("\n");
        sb.Append("  PostalCode: ").Append(PostalCode).Append("\n");
        sb.Append("  CountryCode: ").Append(CountryCode).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson(JsonSerializerOptions options)
    {
        return JsonSerializer.Serialize(this, options);
    }

}