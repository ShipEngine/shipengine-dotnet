// <auto-generated />
// DO NOT MODIFY THIS FILE

// Changes can be made in a corresponding partial file, or by changing
// the template in <root>/generation/templates and generating the class again.


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Text.Json.Serialization.Metadata;
using System.Text.RegularExpressions;

namespace ShipEngineSDK.Model;

/// <summary>
/// Represents detailed information about a tax (e.g. VAT) contained in a shipping cost. 
/// </summary>
public partial class RateDetailAttributes
{

    /// <summary>
    /// Code for a specific tax type
    /// </summary>
    /// <value>Code for a specific tax type</value>
    [JsonPropertyName("tax_code"), JsonPropertyOrder(1)]
    public string? TaxCode { get; set; }

    /// <summary>
    /// Tax percentage, e.g. 20 for 20%, added to the shipping cost
    /// </summary>
    /// <value>Tax percentage, e.g. 20 for 20%, added to the shipping cost</value>
    [JsonPropertyName("tax_percentage"), JsonPropertyOrder(2)]
    public decimal? TaxPercentage { get; set; }

    /// <summary>
    /// Gets or Sets TaxType
    /// </summary>
    [JsonPropertyName("tax_type"), JsonPropertyOrder(3)]
    public TaxType? TaxType { get; set; }


    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class RateDetailAttributes {\n");
#pragma warning disable CS0612 // Type or member is obsolete
        sb.Append("  TaxCode: ").Append(TaxCode).Append("\n");
        sb.Append("  TaxPercentage: ").Append(TaxPercentage).Append("\n");
        sb.Append("  TaxType: ").Append(TaxType).Append("\n");
#pragma warning restore CS0612 // Type or member is obsolete
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson(JsonSerializerOptions options)
    {
        return JsonSerializer.Serialize(this, options);
    }

}