/*
 * ShipEngine API
 *
 * The version of the OpenAPI document: 1.1.202406212006
 * Contact: sales@shipengine.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Text.Json.Serialization.Metadata;
using System.Text.RegularExpressions;

namespace ShipEngineSDK.Model;

/// <summary>
/// UpdateCarrierSettingsRequestBody
/// </summary>
[JsonConverter(typeof(UpdateCarrierSettingsRequestBodyJsonConverter))]
//[DataContract(Name = "update_carrier_settings_request_body")]
public partial class UpdateCarrierSettingsRequestBody : AbstractOpenAPISchema
{

    /// <summary>
    /// Initializes a new instance of the <see cref="UpdateCarrierSettingsRequestBody" /> class
    /// with the <see cref="UpdateDhlExpressSettingsRequestBody" /> class
    /// </summary>
    /// <param name="actualInstance">An instance of UpdateDhlExpressSettingsRequestBody.</param>
    public UpdateCarrierSettingsRequestBody(UpdateDhlExpressSettingsRequestBody actualInstance)
    {
        this.IsNullable = false;
        this.SchemaType = "oneOf";
        this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="UpdateCarrierSettingsRequestBody" /> class
    /// with the <see cref="UpdateFedexSettingsRequestBody" /> class
    /// </summary>
    /// <param name="actualInstance">An instance of UpdateFedexSettingsRequestBody.</param>
    public UpdateCarrierSettingsRequestBody(UpdateFedexSettingsRequestBody actualInstance)
    {
        this.IsNullable = false;
        this.SchemaType = "oneOf";
        this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="UpdateCarrierSettingsRequestBody" /> class
    /// with the <see cref="UpdateNewgisticsSettingsRequestBody" /> class
    /// </summary>
    /// <param name="actualInstance">An instance of UpdateNewgisticsSettingsRequestBody.</param>
    public UpdateCarrierSettingsRequestBody(UpdateNewgisticsSettingsRequestBody actualInstance)
    {
        this.IsNullable = false;
        this.SchemaType = "oneOf";
        this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="UpdateCarrierSettingsRequestBody" /> class
    /// with the <see cref="UpdateUpsSettingsRequestBody" /> class
    /// </summary>
    /// <param name="actualInstance">An instance of UpdateUpsSettingsRequestBody.</param>
    public UpdateCarrierSettingsRequestBody(UpdateUpsSettingsRequestBody actualInstance)
    {
        this.IsNullable = false;
        this.SchemaType = "oneOf";
        this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="UpdateCarrierSettingsRequestBody" /> class
    /// with the <see cref="UpdateAmazonBuyShippingRequestBody" /> class
    /// </summary>
    /// <param name="actualInstance">An instance of UpdateAmazonBuyShippingRequestBody.</param>
    public UpdateCarrierSettingsRequestBody(UpdateAmazonBuyShippingRequestBody actualInstance)
    {
        this.IsNullable = false;
        this.SchemaType = "oneOf";
        this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
    }


    private Object _actualInstance;

    /// <summary>
    /// Gets or Sets ActualInstance
    /// </summary>
    public override Object ActualInstance
    {
        get
        {
            return _actualInstance;
        }
        set
        {
            if (value.GetType() == typeof(UpdateDhlExpressSettingsRequestBody))
            {
                this._actualInstance = value;
            }
            else if (value.GetType() == typeof(UpdateFedexSettingsRequestBody))
            {
                this._actualInstance = value;
            }
            else if (value.GetType() == typeof(UpdateNewgisticsSettingsRequestBody))
            {
                this._actualInstance = value;
            }
            else if (value.GetType() == typeof(UpdateUpsSettingsRequestBody))
            {
                this._actualInstance = value;
            }
            else if (value.GetType() == typeof(UpdateAmazonBuyShippingRequestBody))
            {
                this._actualInstance = value;
            }
            else
            {
                throw new ArgumentException("Invalid instance found. Must be the following types: UpdateDhlExpressSettingsRequestBody, UpdateFedexSettingsRequestBody, UpdateNewgisticsSettingsRequestBody, UpdateUpsSettingsRequestBody, UpdateAmazonBuyShippingRequestBody");
            }
        }
    }

    /// <summary>
    /// Get the actual instance of `UpdateDhlExpressSettingsRequestBody`. If the actual instance is not `UpdateDhlExpressSettingsRequestBody`,
    /// the InvalidClassException will be thrown
    /// </summary>
    /// <returns>An instance of UpdateDhlExpressSettingsRequestBody</returns>
    public UpdateDhlExpressSettingsRequestBody GetUpdateDhlExpressSettingsRequestBody()
    {
        return (UpdateDhlExpressSettingsRequestBody)this.ActualInstance;
    }

    /// <summary>
    /// Get the actual instance of `UpdateFedexSettingsRequestBody`. If the actual instance is not `UpdateFedexSettingsRequestBody`,
    /// the InvalidClassException will be thrown
    /// </summary>
    /// <returns>An instance of UpdateFedexSettingsRequestBody</returns>
    public UpdateFedexSettingsRequestBody GetUpdateFedexSettingsRequestBody()
    {
        return (UpdateFedexSettingsRequestBody)this.ActualInstance;
    }

    /// <summary>
    /// Get the actual instance of `UpdateNewgisticsSettingsRequestBody`. If the actual instance is not `UpdateNewgisticsSettingsRequestBody`,
    /// the InvalidClassException will be thrown
    /// </summary>
    /// <returns>An instance of UpdateNewgisticsSettingsRequestBody</returns>
    public UpdateNewgisticsSettingsRequestBody GetUpdateNewgisticsSettingsRequestBody()
    {
        return (UpdateNewgisticsSettingsRequestBody)this.ActualInstance;
    }

    /// <summary>
    /// Get the actual instance of `UpdateUpsSettingsRequestBody`. If the actual instance is not `UpdateUpsSettingsRequestBody`,
    /// the InvalidClassException will be thrown
    /// </summary>
    /// <returns>An instance of UpdateUpsSettingsRequestBody</returns>
    public UpdateUpsSettingsRequestBody GetUpdateUpsSettingsRequestBody()
    {
        return (UpdateUpsSettingsRequestBody)this.ActualInstance;
    }

    /// <summary>
    /// Get the actual instance of `UpdateAmazonBuyShippingRequestBody`. If the actual instance is not `UpdateAmazonBuyShippingRequestBody`,
    /// the InvalidClassException will be thrown
    /// </summary>
    /// <returns>An instance of UpdateAmazonBuyShippingRequestBody</returns>
    public UpdateAmazonBuyShippingRequestBody GetUpdateAmazonBuyShippingRequestBody()
    {
        return (UpdateAmazonBuyShippingRequestBody)this.ActualInstance;
    }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class UpdateCarrierSettingsRequestBody {\n");
        sb.Append("  ActualInstance: ").Append(this.ActualInstance).Append("\n");

        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public override string ToJson()
    {
        return JsonSerializer.Serialize(this.ActualInstance, UpdateCarrierSettingsRequestBody.SerializerSettings);
    }

}

/// <summary>
/// Custom JSON converter for UpdateCarrierSettingsRequestBody
/// </summary>
public class UpdateCarrierSettingsRequestBodyJsonConverter : JsonConverter<UpdateCarrierSettingsRequestBody>
{
    private static HashSet<Type> OneOfTypes = [typeof(UpdateDhlExpressSettingsRequestBody), typeof(UpdateFedexSettingsRequestBody), typeof(UpdateNewgisticsSettingsRequestBody), typeof(UpdateUpsSettingsRequestBody), typeof(UpdateAmazonBuyShippingRequestBody)];
    private static HashSet<string> MandatoryFields = [];
    private static JsonSerializerOptions DeserializingOptions = new(AbstractOpenAPISchema.SerializerSettings)
    {
        TypeInfoResolver = new DefaultJsonTypeInfoResolver
        {
            Modifiers =
            {
                static typeInfo =>
                {
                    if (typeInfo.Kind != JsonTypeInfoKind.Object)
                        return;

                    foreach (JsonPropertyInfo propertyInfo in typeInfo.Properties)
                    {
                        // Strip IsRequired constraint from every property except those which define the underlying type
                        if (OneOfTypes.Contains(typeInfo.Type))
                        {
                            var underlyingPropertyName = (propertyInfo.AttributeProvider as MemberInfo)?.Name;
                            propertyInfo.IsRequired = underlyingPropertyName != null && MandatoryFields.Contains(underlyingPropertyName);
                        }
                        else
                        {
                            propertyInfo.IsRequired = false;
                        }
                    }
                }
            }
        }
    };

    /// <summary>
    /// To write the JSON string
    /// </summary>
    /// <param name="writer">JSON writer</param>
    /// <param name="value">Object to be converted into a JSON string</param>
    /// <param name="options">Serializer options</param>
    public override void Write(Utf8JsonWriter writer, UpdateCarrierSettingsRequestBody value, JsonSerializerOptions options)
    {
        writer.WriteStartObject();


        var node = JsonSerializer.SerializeToNode(value.ActualInstance, options);
        foreach (var prop in node?.AsObject() ?? [])
        {
            if (prop.Value != null)
            {
                writer.WritePropertyName(prop.Key);
                prop.Value.WriteTo(writer, options);
            }
        }

        writer.WriteEndObject();
    }

    /// <summary>
    /// To convert a JSON string into an object
    /// </summary>
    /// <param name="reader">JSON reader</param>
    /// <param name="typeToConvert">Object type to convert</param>
    /// <param name="options">Serializer options</param>
    /// <returns>The object converted from the JSON string</returns>
    public override UpdateCarrierSettingsRequestBody Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
    {
        if (reader.TokenType == JsonTokenType.Null)
        {
            return null;
        }

        var jsonDoc = JsonDocument.ParseValue(ref reader);
        UpdateCarrierSettingsRequestBody newUpdateCarrierSettingsRequestBody = null;

        int match = 0;
        var matchedTypes = new List<string>();

        try
        {
            newUpdateCarrierSettingsRequestBody = new UpdateCarrierSettingsRequestBody(JsonSerializer.Deserialize<UpdateDhlExpressSettingsRequestBody>(jsonDoc, DeserializingOptions));

            matchedTypes.Add("UpdateDhlExpressSettingsRequestBody");
            match++;
        }
        catch (Exception exception)
        {
            // deserialization failed, try the next one
            System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into UpdateDhlExpressSettingsRequestBody: {1}", jsonDoc, exception.ToString()));
        }

        try
        {
            newUpdateCarrierSettingsRequestBody = new UpdateCarrierSettingsRequestBody(JsonSerializer.Deserialize<UpdateFedexSettingsRequestBody>(jsonDoc, DeserializingOptions));

            matchedTypes.Add("UpdateFedexSettingsRequestBody");
            match++;
        }
        catch (Exception exception)
        {
            // deserialization failed, try the next one
            System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into UpdateFedexSettingsRequestBody: {1}", jsonDoc, exception.ToString()));
        }

        try
        {
            newUpdateCarrierSettingsRequestBody = new UpdateCarrierSettingsRequestBody(JsonSerializer.Deserialize<UpdateNewgisticsSettingsRequestBody>(jsonDoc, DeserializingOptions));

            matchedTypes.Add("UpdateNewgisticsSettingsRequestBody");
            match++;
        }
        catch (Exception exception)
        {
            // deserialization failed, try the next one
            System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into UpdateNewgisticsSettingsRequestBody: {1}", jsonDoc, exception.ToString()));
        }

        try
        {
            newUpdateCarrierSettingsRequestBody = new UpdateCarrierSettingsRequestBody(JsonSerializer.Deserialize<UpdateUpsSettingsRequestBody>(jsonDoc, DeserializingOptions));

            matchedTypes.Add("UpdateUpsSettingsRequestBody");
            match++;
        }
        catch (Exception exception)
        {
            // deserialization failed, try the next one
            System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into UpdateUpsSettingsRequestBody: {1}", jsonDoc, exception.ToString()));
        }

        try
        {
            newUpdateCarrierSettingsRequestBody = new UpdateCarrierSettingsRequestBody(JsonSerializer.Deserialize<UpdateAmazonBuyShippingRequestBody>(jsonDoc, DeserializingOptions));

            matchedTypes.Add("UpdateAmazonBuyShippingRequestBody");
            match++;
        }
        catch (Exception exception)
        {
            // deserialization failed, try the next one
            System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into UpdateAmazonBuyShippingRequestBody: {1}", jsonDoc, exception.ToString()));
        }

        if (match == 0)
        {
            throw new InvalidDataException("The JSON string `" + jsonDoc + "` cannot be deserialized into any schema defined.");
        }

        if (match > 1)
        {
            throw new InvalidDataException("The JSON string `" + jsonDoc + "` incorrectly matches more than one schema (should be exactly one match): " + matchedTypes);
        }


        // deserialization is considered successful at this point if no exception has been thrown.
        return newUpdateCarrierSettingsRequestBody;
    }

    /// <summary>
    /// Check if the object can be converted
    /// </summary>
    /// <param name="objectType">Object type</param>
    /// <returns>True if the object can be converted</returns>
    public override bool CanConvert(Type objectType)
    {
        return typeof(UpdateCarrierSettingsRequestBody).IsAssignableFrom(objectType);
    }
}