// <auto-generated />
// DO NOT MODIFY THIS FILE

// Changes can be made in a corresponding partial file, or by changing
// the template in <root>/generation/templates and generating the class again.


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Text.Json.Serialization.Metadata;
using System.Text.RegularExpressions;

namespace ShipEngineSDK.Model;

/// <summary>
/// The Windsor framework is a new regulation in the UK that simplifies customs procedures for goods moved from the UK mainland to Northern Ireland.
/// </summary>
public partial class AdvancedShipmentOptionsWindsorFrameworkDetails
{
    /// <summary>
    /// An indicator that will tell the carrier and HMRC the type of movement for the shipment.
    /// </summary>
    /// <value>An indicator that will tell the carrier and HMRC the type of movement for the shipment.</value>
    [JsonConverter(typeof(MovementIndicatorEnumJsonConverter))]
    public class MovementIndicatorEnum
    {
        private readonly string _value;

        /// <summary>
        /// Create a new instance of MovementIndicatorEnum with a predefined value.
        /// </summary>
        internal MovementIndicatorEnum()
        {
            _value = "c2c";
        }

        /// <summary>
        /// Create a new instance of MovementIndicatorEnum with a custom value.
        /// </summary>
        /// <param name="value">The value of the MovementIndicatorEnum</param>
        /// <remarks>
        /// You can send a custom value to the API using this constructor, but the API most likely won't know what to do with it.
        /// You should use the predefined values returned by the static properties of this class unless you know that the value is value.
        /// </remarks>
        public MovementIndicatorEnum(string value)
        {
            _value = value;
        }

        /// <summary>
        /// Enum C2c for value: c2c
        /// </summary>
        public static MovementIndicatorEnum C2c { get; } = new("c2c");


        /// <summary>
        /// Enum B2c for value: b2c
        /// </summary>
        public static MovementIndicatorEnum B2c { get; } = new("b2c");


        /// <summary>
        /// Enum C2b for value: c2b
        /// </summary>
        public static MovementIndicatorEnum C2b { get; } = new("c2b");


        /// <summary>
        /// Enum B2b for value: b2b
        /// </summary>
        public static MovementIndicatorEnum B2b { get; } = new("b2b");


        /// <summary>
        /// Get a string representation of the current value
        /// </summary>
        public override string ToString() => _value;
    }

    internal class MovementIndicatorEnumJsonConverter : JsonConverter<MovementIndicatorEnum>
    {
        public override MovementIndicatorEnum? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) =>
            reader.TokenType == JsonTokenType.String ? new MovementIndicatorEnum(reader.GetString()!) : null;

        public override void Write(Utf8JsonWriter writer, MovementIndicatorEnum value, JsonSerializerOptions options) =>
            writer.WriteStringValue(value.ToString());

        public override bool CanConvert(Type typeToConvert) =>
            typeToConvert == typeof(MovementIndicatorEnum);
    }


    /// <summary>
    /// An indicator that will tell the carrier and HMRC the type of movement for the shipment.
    /// </summary>
    /// <value>An indicator that will tell the carrier and HMRC the type of movement for the shipment.</value>
    [JsonPropertyName("movement_indicator"), JsonPropertyOrder(1)]
    public MovementIndicatorEnum? MovementIndicator { get; set; }

    /// <summary>
    /// An indicator that allows a shipper to declare the shipment as not-at-risk.
    /// </summary>
    /// <value>An indicator that allows a shipper to declare the shipment as not-at-risk.</value>
    [JsonPropertyName("not_at_risk"), JsonPropertyOrder(2)]
    public bool? NotAtRisk { get; set; }


    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class AdvancedShipmentOptionsWindsorFrameworkDetails {\n");
#pragma warning disable CS0612 // Type or member is obsolete
        sb.Append("  MovementIndicator: ").Append(MovementIndicator).Append("\n");
        sb.Append("  NotAtRisk: ").Append(NotAtRisk).Append("\n");
#pragma warning restore CS0612 // Type or member is obsolete
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson(JsonSerializerOptions options)
    {
        return JsonSerializer.Serialize(this, options);
    }

}