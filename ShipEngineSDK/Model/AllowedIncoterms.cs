/*
 * ShipEngine API
 *
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202406212006
 * Contact: sales@shipengine.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Text.Json.Serialization.Metadata;
using System.Text.RegularExpressions;

namespace ShipEngineSDK.Model;

/// <summary>
/// Defines Allowed incoterms
/// </summary>
[JsonConverter(typeof(AllowedIncotermsJsonConverter))]
public class AllowedIncoterms
{
    private string _value;

    internal AllowedIncoterms() {
        _value = "exw";
    }

    /// <summary>
    /// Create a new instance of AllowedIncoterms with a custom value.
    /// </summary>
    /// <param name="value">The value of the AllowedIncoterms</param>
    /// <remarks>
    /// You can send a custom value to the API using this constructor, but the API most likely won't know what to do with it.
    /// You should use the predefined values returned by the static properties of this class unless you know that the value is value.
    /// </remarks>
    public AllowedIncoterms(string value) {
      _value = value;
    }

    /// <summary>
    /// Enum Exw for value: exw
    /// </summary>
    public static AllowedIncoterms Exw { get; } = new("exw");


    /// <summary>
    /// Enum Fca for value: fca
    /// </summary>
    public static AllowedIncoterms Fca { get; } = new("fca");


    /// <summary>
    /// Enum Cpt for value: cpt
    /// </summary>
    public static AllowedIncoterms Cpt { get; } = new("cpt");


    /// <summary>
    /// Enum Cip for value: cip
    /// </summary>
    public static AllowedIncoterms Cip { get; } = new("cip");


    /// <summary>
    /// Enum Dpu for value: dpu
    /// </summary>
    public static AllowedIncoterms Dpu { get; } = new("dpu");


    /// <summary>
    /// Enum Dap for value: dap
    /// </summary>
    public static AllowedIncoterms Dap { get; } = new("dap");


    /// <summary>
    /// Enum Ddp for value: ddp
    /// </summary>
    public static AllowedIncoterms Ddp { get; } = new("ddp");


    /// <summary>
    /// Enum Fas for value: fas
    /// </summary>
    public static AllowedIncoterms Fas { get; } = new("fas");


    /// <summary>
    /// Enum Fob for value: fob
    /// </summary>
    public static AllowedIncoterms Fob { get; } = new("fob");


    /// <summary>
    /// Enum Cfr for value: cfr
    /// </summary>
    public static AllowedIncoterms Cfr { get; } = new("cfr");


    /// <summary>
    /// Enum Cif for value: cif
    /// </summary>
    public static AllowedIncoterms Cif { get; } = new("cif");


    /// <summary>
    /// Enum Ddu for value: ddu
    /// </summary>
    public static AllowedIncoterms Ddu { get; } = new("ddu");


    /// <summary>
    /// Enum Daf for value: daf
    /// </summary>
    public static AllowedIncoterms Daf { get; } = new("daf");


    /// <summary>
    /// Enum Deq for value: deq
    /// </summary>
    public static AllowedIncoterms Deq { get; } = new("deq");


    /// <summary>
    /// Enum Des for value: des
    /// </summary>
    public static AllowedIncoterms Des { get; } = new("des");


    public override string ToString() => _value;
}

internal class AllowedIncotermsJsonConverter : JsonConverter<AllowedIncoterms>
{
    public override AllowedIncoterms? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) =>
        reader.TokenType == JsonTokenType.String ? new AllowedIncoterms(reader.GetString()) : null;

    public override void Write(Utf8JsonWriter writer, AllowedIncoterms value, JsonSerializerOptions options) =>
        writer.WriteStringValue(value.ToString());

    public override bool CanConvert(Type typeToConvert) =>
        typeToConvert == typeof(AllowedIncoterms);
}
