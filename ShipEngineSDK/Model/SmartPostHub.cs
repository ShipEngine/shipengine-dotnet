/*
 * ShipEngine API
 *
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202406212006
 * Contact: sales@shipengine.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Text.RegularExpressions;

namespace ShipEngineSDK.Model;

    /// <summary>
    /// The possible smart post hub values
    /// </summary>
    /// <value>The possible smart post hub values</value>
    public static class SmartPostHub
    {
        private static readonly HashSet<string> _values = new()
        {
            "none",
            "allentown_pa",
            "atlanta_ga",
            "baltimore_md",
            "charlotte_nc",
            "chino_ca",
            "dallas_tx",
            "denver_co",
            "detroit_mi",
            "edison_nj",
            "grove_city_oh",
            "groveport_oh",
            "houston_tx",
            "indianapolis_in",
            "kansas_city_ks",
            "los_angeles_ca",
            "martinsburg_wv",
            "memphis_tn",
            "minneapolis_mn",
            "new_berlin_wi",
            "northborough_ma",
            "orlando_fl",
            "phoneix_az",
            "pittsburgh_pa",
            "reno_nv",
            "sacramento_ca",
            "salt_lake_city_ut",
            "seattle_wa",
            "st_louis_mo",
            "windsor_ct",
            "newark_ny",
            "south_brunswick_nj",
            "scranton_pa",
            "wheeling_il",
        };

        public static string DefaultValue => None;
        /// <summary>
        /// Enum None for value: none
        /// </summary>
        public static string None { get; } = "none";


        /// <summary>
        /// Enum AllentownPa for value: allentown_pa
        /// </summary>
        public static string AllentownPa { get; } = "allentown_pa";


        /// <summary>
        /// Enum AtlantaGa for value: atlanta_ga
        /// </summary>
        public static string AtlantaGa { get; } = "atlanta_ga";


        /// <summary>
        /// Enum BaltimoreMd for value: baltimore_md
        /// </summary>
        public static string BaltimoreMd { get; } = "baltimore_md";


        /// <summary>
        /// Enum CharlotteNc for value: charlotte_nc
        /// </summary>
        public static string CharlotteNc { get; } = "charlotte_nc";


        /// <summary>
        /// Enum ChinoCa for value: chino_ca
        /// </summary>
        public static string ChinoCa { get; } = "chino_ca";


        /// <summary>
        /// Enum DallasTx for value: dallas_tx
        /// </summary>
        public static string DallasTx { get; } = "dallas_tx";


        /// <summary>
        /// Enum DenverCo for value: denver_co
        /// </summary>
        public static string DenverCo { get; } = "denver_co";


        /// <summary>
        /// Enum DetroitMi for value: detroit_mi
        /// </summary>
        public static string DetroitMi { get; } = "detroit_mi";


        /// <summary>
        /// Enum EdisonNj for value: edison_nj
        /// </summary>
        public static string EdisonNj { get; } = "edison_nj";


        /// <summary>
        /// Enum GroveCityOh for value: grove_city_oh
        /// </summary>
        public static string GroveCityOh { get; } = "grove_city_oh";


        /// <summary>
        /// Enum GroveportOh for value: groveport_oh
        /// </summary>
        public static string GroveportOh { get; } = "groveport_oh";


        /// <summary>
        /// Enum HoustonTx for value: houston_tx
        /// </summary>
        public static string HoustonTx { get; } = "houston_tx";


        /// <summary>
        /// Enum IndianapolisIn for value: indianapolis_in
        /// </summary>
        public static string IndianapolisIn { get; } = "indianapolis_in";


        /// <summary>
        /// Enum KansasCityKs for value: kansas_city_ks
        /// </summary>
        public static string KansasCityKs { get; } = "kansas_city_ks";


        /// <summary>
        /// Enum LosAngelesCa for value: los_angeles_ca
        /// </summary>
        public static string LosAngelesCa { get; } = "los_angeles_ca";


        /// <summary>
        /// Enum MartinsburgWv for value: martinsburg_wv
        /// </summary>
        public static string MartinsburgWv { get; } = "martinsburg_wv";


        /// <summary>
        /// Enum MemphisTn for value: memphis_tn
        /// </summary>
        public static string MemphisTn { get; } = "memphis_tn";


        /// <summary>
        /// Enum MinneapolisMn for value: minneapolis_mn
        /// </summary>
        public static string MinneapolisMn { get; } = "minneapolis_mn";


        /// <summary>
        /// Enum NewBerlinWi for value: new_berlin_wi
        /// </summary>
        public static string NewBerlinWi { get; } = "new_berlin_wi";


        /// <summary>
        /// Enum NorthboroughMa for value: northborough_ma
        /// </summary>
        public static string NorthboroughMa { get; } = "northborough_ma";


        /// <summary>
        /// Enum OrlandoFl for value: orlando_fl
        /// </summary>
        public static string OrlandoFl { get; } = "orlando_fl";


        /// <summary>
        /// Enum PhoneixAz for value: phoneix_az
        /// </summary>
        public static string PhoneixAz { get; } = "phoneix_az";


        /// <summary>
        /// Enum PittsburghPa for value: pittsburgh_pa
        /// </summary>
        public static string PittsburghPa { get; } = "pittsburgh_pa";


        /// <summary>
        /// Enum RenoNv for value: reno_nv
        /// </summary>
        public static string RenoNv { get; } = "reno_nv";


        /// <summary>
        /// Enum SacramentoCa for value: sacramento_ca
        /// </summary>
        public static string SacramentoCa { get; } = "sacramento_ca";


        /// <summary>
        /// Enum SaltLakeCityUt for value: salt_lake_city_ut
        /// </summary>
        public static string SaltLakeCityUt { get; } = "salt_lake_city_ut";


        /// <summary>
        /// Enum SeattleWa for value: seattle_wa
        /// </summary>
        public static string SeattleWa { get; } = "seattle_wa";


        /// <summary>
        /// Enum StLouisMo for value: st_louis_mo
        /// </summary>
        public static string StLouisMo { get; } = "st_louis_mo";


        /// <summary>
        /// Enum WindsorCt for value: windsor_ct
        /// </summary>
        public static string WindsorCt { get; } = "windsor_ct";


        /// <summary>
        /// Enum NewarkNy for value: newark_ny
        /// </summary>
        public static string NewarkNy { get; } = "newark_ny";


        /// <summary>
        /// Enum SouthBrunswickNj for value: south_brunswick_nj
        /// </summary>
        public static string SouthBrunswickNj { get; } = "south_brunswick_nj";


        /// <summary>
        /// Enum ScrantonPa for value: scranton_pa
        /// </summary>
        public static string ScrantonPa { get; } = "scranton_pa";


        /// <summary>
        /// Enum WheelingIl for value: wheeling_il
        /// </summary>
        public static string WheelingIl { get; } = "wheeling_il";


        /// <summary>
        /// Is the given value a valid ?
        /// </summary>
        public static bool IsValid(string value)
        {
            return _values.Contains(value);
        }
    }
