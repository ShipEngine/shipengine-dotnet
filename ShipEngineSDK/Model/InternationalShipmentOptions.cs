/*
 * ShipEngine API
 *
 * The version of the OpenAPI document: 1.1.202406212006
 * Contact: sales@shipengine.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Text.Json.Serialization.Metadata;
using System.Text.RegularExpressions;

namespace ShipEngineSDK.Model;

/// <summary>
/// Options for international shipments, such as customs declarations.
/// </summary>
public partial class InternationalShipmentOptions
{

    /// <summary>
    /// The type of contents in this shipment.  This may impact import duties or customs treatment.  CLOVUS
    /// </summary>
    /// <value>The type of contents in this shipment.  This may impact import duties or customs treatment.</value>
    [JsonPropertyName("contents")]
    [JsonRequired]
    public PackageContents Contents { get; set; } = new();


    /// <summary>
    /// Indicates what to do if a package is unable to be delivered.  CLOVUS
    /// </summary>
    /// <value>Indicates what to do if a package is unable to be delivered.</value>
    [JsonPropertyName("non_delivery")]
    [JsonRequired]
    public NonDelivery NonDelivery { get; set; } = new();


    /// <summary>
    /// Specifies the supported terms of trade code (incoterms)  CLOVUS
    /// </summary>
    /// <value>Specifies the supported terms of trade code (incoterms)</value>
    [JsonPropertyName("terms_of_trade_code")]
    public AllowedIncoterms? TermsOfTradeCode { get; set; }
    /// <summary>
    /// Explanation for contents (required if the &#x60;contents&#x60; is provided as &#x60;other&#x60;)
    /// </summary>
    /// <value>Explanation for contents (required if the &#x60;contents&#x60; is provided as &#x60;other&#x60;)</value>
    [JsonPropertyName("contents_explanation")]
    public string ContentsExplanation { get; set; }

    /// <summary>
    /// Declaration statement to be placed on the commercial invoice
    /// </summary>
    /// <value>Declaration statement to be placed on the commercial invoice</value>
    [JsonPropertyName("declaration")]
    public string Declaration { get; set; }

    /// <summary>
    /// Gets or Sets InvoiceAdditionalDetails
    /// </summary>
    [JsonPropertyName("invoice_additional_details")]
    public InvoiceAdditionalDetails InvoiceAdditionalDetails { get; set; }

    /// <summary>
    /// Gets or Sets ImporterOfRecord
    /// </summary>
    [JsonPropertyName("importer_of_record")]
    public ImporterOfRecords ImporterOfRecord { get; set; }

    /// <summary>
    /// Customs declarations for each item in the shipment. (Please provide this information under &#x60;products&#x60; inside &#x60;packages&#x60;)
    /// </summary>
    /// <value>Customs declarations for each item in the shipment. (Please provide this information under &#x60;products&#x60; inside &#x60;packages&#x60;)</value>
    [JsonPropertyName("customs_items")]
    [Obsolete]
    public List<CustomsItem> CustomsItems { get; set; }


    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        StringBuilder sb = new StringBuilder();
        sb.Append("class InternationalShipmentOptions {\n");
        sb.Append("  Contents: ").Append(Contents).Append("\n");
        sb.Append("  ContentsExplanation: ").Append(ContentsExplanation).Append("\n");
        sb.Append("  NonDelivery: ").Append(NonDelivery).Append("\n");
        sb.Append("  TermsOfTradeCode: ").Append(TermsOfTradeCode).Append("\n");
        sb.Append("  Declaration: ").Append(Declaration).Append("\n");
        sb.Append("  InvoiceAdditionalDetails: ").Append(InvoiceAdditionalDetails).Append("\n");
        sb.Append("  ImporterOfRecord: ").Append(ImporterOfRecord).Append("\n");
        sb.Append("  CustomsItems: ").Append(CustomsItems).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson(JsonSerializerOptions options)
    {
        return JsonSerializer.Serialize(this, options);
    }

}