// <auto-generated />
// DO NOT MODIFY THIS FILE

// Changes can be made in a corresponding partial file, or by changing
// the template in <root>/generation/templates and generating the class again.


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Text.Json.Serialization.Metadata;
using System.Text.RegularExpressions;

namespace ShipEngineSDK.Model;

/// <summary>
/// LabelPackagesInner
/// </summary>
public partial class LabelPackagesInner
{

    /// <summary>
    /// The package weight
    /// </summary>
    /// <value>The package weight</value>
    [JsonPropertyName("weight"), JsonPropertyOrder(1)]
    public required Weight Weight { get; set; }

    /// <summary>
    /// Alternative identifiers associated with this package. 
    /// </summary>
    /// <value>Alternative identifiers associated with this package. </value>
    /// <remarks>
    /// This should not be used for input as it will be ignored on serialization.
    /// </remarks>
    [JsonPropertyName("alternative_identifiers"), JsonInclude]
    public List<AlternativeIdentifier>? AlternativeIdentifiers { get; set; }

    /// <summary>
    /// A short description of the package content. Required for shipments moving to, from, and through Mexico. 
    /// </summary>
    /// <value>A short description of the package content. Required for shipments moving to, from, and through Mexico. </value>
    /// <example>
    /// Hand knitted wool socks
    /// </example>
    [JsonPropertyName("content_description"), JsonPropertyOrder(3)]
    public string? ContentDescription { get; set; }

    /// <summary>
    /// The package dimensions
    /// </summary>
    /// <value>The package dimensions</value>
    [JsonPropertyName("dimensions"), JsonPropertyOrder(4)]
    public Dimensions? Dimensions { get; set; }

    /// <summary>
    /// An external package id.
    /// </summary>
    /// <value>An external package id.</value>
    [JsonPropertyName("external_package_id"), JsonPropertyOrder(5)]
    public string? ExternalPackageId { get; set; }

    /// <summary>
    /// The form download for any customs that are needed
    /// </summary>
    /// <value>The form download for any customs that are needed</value>
    /// <remarks>
    /// This should not be used for input as it will be ignored on serialization.
    /// </remarks>
    [JsonPropertyName("form_download"), JsonInclude]
    public OptionalLink? FormDownload { get; set; }

    /// <summary>
    /// Whether the package has form documents available for download
    /// </summary>
    /// <value>Whether the package has form documents available for download</value>
    [JsonPropertyName("has_form_documents"), JsonPropertyOrder(7)]
    public bool? HasFormDocuments { get; set; }

    /// <summary>
    /// Whether the package has label documents available for download
    /// </summary>
    /// <value>Whether the package has label documents available for download</value>
    [JsonPropertyName("has_label_documents"), JsonPropertyOrder(8)]
    public bool? HasLabelDocuments { get; set; }

    /// <summary>
    /// Whether the package has paperless documents available for download
    /// </summary>
    /// <value>Whether the package has paperless documents available for download</value>
    [JsonPropertyName("has_paperless_label_documents"), JsonPropertyOrder(9)]
    public bool? HasPaperlessLabelDocuments { get; set; }

    /// <summary>
    /// Whether the package has QR code documents available for download
    /// </summary>
    /// <value>Whether the package has QR code documents available for download</value>
    [JsonPropertyName("has_qr_code_documents"), JsonPropertyOrder(10)]
    public bool? HasQrCodeDocuments { get; set; }

    /// <summary>
    /// The insured value of the package.  Requires the &#x60;insurance_provider&#x60; field of the shipment to be set. 
    /// </summary>
    /// <value>The insured value of the package.  Requires the &#x60;insurance_provider&#x60; field of the shipment to be set. </value>
    [JsonPropertyName("insured_value"), JsonPropertyOrder(11)]
    public MonetaryValue? InsuredValue { get; set; }

    /// <summary>
    /// The label download for the package
    /// </summary>
    /// <value>The label download for the package</value>
    /// <remarks>
    /// This should not be used for input as it will be ignored on serialization.
    /// </remarks>
    [JsonPropertyName("label_download"), JsonInclude]
    public LabelDownload? LabelDownload { get; set; }

    /// <summary>
    /// Gets or Sets LabelMessages
    /// </summary>
    [JsonPropertyName("label_messages"), JsonPropertyOrder(13)]
    public LabelMessages? LabelMessages { get; set; }

    /// <summary>
    /// The [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as &#x60;thick_envelope&#x60;, &#x60;small_flat_rate_box&#x60;, &#x60;large_package&#x60;, etc.  The code &#x60;package&#x60; indicates a custom or unknown package type. 
    /// </summary>
    /// <value>The [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as &#x60;thick_envelope&#x60;, &#x60;small_flat_rate_box&#x60;, &#x60;large_package&#x60;, etc.  The code &#x60;package&#x60; indicates a custom or unknown package type. </value>
    /// <example>
    /// small_flat_rate_box
    /// </example>
    [JsonPropertyName("package_code"), JsonPropertyOrder(14)]
    public string? PackageCode { get; set; }

    /// <summary>
    /// The shipment package id
    /// </summary>
    /// <value>The shipment package id</value>
    /// <remarks>
    /// This should not be used for input as it will be ignored on serialization.
    /// </remarks>
    [JsonPropertyName("package_id"), JsonInclude]
    public int? PackageId { get; set; }

    /// <summary>
    /// The paperless details which may contain elements like &#x60;href&#x60;, &#x60;instructions&#x60; and &#x60;handoff_code&#x60;.
    /// </summary>
    /// <value>The paperless details which may contain elements like &#x60;href&#x60;, &#x60;instructions&#x60; and &#x60;handoff_code&#x60;.</value>
    /// <remarks>
    /// This should not be used for input as it will be ignored on serialization.
    /// </remarks>
    [JsonPropertyName("paperless_download"), JsonInclude]
    public PaperlessDownload? PaperlessDownload { get; set; }

    /// <summary>
    /// The QR code download for the package
    /// </summary>
    /// <value>The QR code download for the package</value>
    /// <remarks>
    /// This should not be used for input as it will be ignored on serialization.
    /// </remarks>
    [JsonPropertyName("qr_code_download"), JsonInclude]
    public OptionalLink? QrCodeDownload { get; set; }

    /// <summary>
    /// Package sequence
    /// </summary>
    /// <value>Package sequence</value>
    /// <remarks>
    /// This should not be used for input as it will be ignored on serialization.
    /// </remarks>
    [JsonPropertyName("sequence"), JsonInclude]
    public int? Sequence { get; set; }

    /// <summary>
    /// The tracking number for the package.  The format depends on the carrier. 
    /// </summary>
    /// <value>The tracking number for the package.  The format depends on the carrier. </value>
    /// <remarks>
    /// This should not be used for input as it will be ignored on serialization.
    /// </remarks>
    /// <example>
    /// 1Z932R800392060079
    /// </example>
    [JsonPropertyName("tracking_number"), JsonInclude]
    public string? TrackingNumber { get; set; }


    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class LabelPackagesInner {\n");
#pragma warning disable CS0612 // Type or member is obsolete
        sb.Append("  Weight: ").Append(Weight).Append("\n");
        sb.Append("  AlternativeIdentifiers: ").Append(AlternativeIdentifiers).Append("\n");
        sb.Append("  ContentDescription: ").Append(ContentDescription).Append("\n");
        sb.Append("  Dimensions: ").Append(Dimensions).Append("\n");
        sb.Append("  ExternalPackageId: ").Append(ExternalPackageId).Append("\n");
        sb.Append("  FormDownload: ").Append(FormDownload).Append("\n");
        sb.Append("  HasFormDocuments: ").Append(HasFormDocuments).Append("\n");
        sb.Append("  HasLabelDocuments: ").Append(HasLabelDocuments).Append("\n");
        sb.Append("  HasPaperlessLabelDocuments: ").Append(HasPaperlessLabelDocuments).Append("\n");
        sb.Append("  HasQrCodeDocuments: ").Append(HasQrCodeDocuments).Append("\n");
        sb.Append("  InsuredValue: ").Append(InsuredValue).Append("\n");
        sb.Append("  LabelDownload: ").Append(LabelDownload).Append("\n");
        sb.Append("  LabelMessages: ").Append(LabelMessages).Append("\n");
        sb.Append("  PackageCode: ").Append(PackageCode).Append("\n");
        sb.Append("  PackageId: ").Append(PackageId).Append("\n");
        sb.Append("  PaperlessDownload: ").Append(PaperlessDownload).Append("\n");
        sb.Append("  QrCodeDownload: ").Append(QrCodeDownload).Append("\n");
        sb.Append("  Sequence: ").Append(Sequence).Append("\n");
        sb.Append("  TrackingNumber: ").Append(TrackingNumber).Append("\n");
#pragma warning restore CS0612 // Type or member is obsolete
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson(JsonSerializerOptions options)
    {
        return JsonSerializer.Serialize(this, options);
    }

}