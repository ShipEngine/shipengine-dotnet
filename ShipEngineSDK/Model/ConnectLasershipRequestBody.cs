/*
 * ShipEngine API
 *
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others.  # Authentication  <!- - ReDoc-Inject: <security-definitions> - ->
 *
 * The version of the OpenAPI document: 1.1.202406212006
 * Contact: sales@shipengine.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Text.Json.Serialization.Metadata;
using System.Text.RegularExpressions;

namespace ShipEngineSDK.Model;

/// <summary>
/// A Lasership account information request body
/// </summary>
//[DataContract(Name = "connect_lasership_request_body")]
public partial class ConnectLasershipRequestBody
{

    /// <summary>
    /// Nickname
    /// </summary>
    /// <value>Nickname</value>
    [JsonPropertyName("nickname")]
    [JsonRequired]
    public string Nickname { get; set; }

    /// <summary>
    /// Web Service ID (WSID)
    /// </summary>
    /// <value>Web Service ID (WSID)</value>
    [JsonPropertyName("web_services_id")]
    [JsonRequired]
    public string WebServicesId { get; set; }

    /// <summary>
    /// Web Service Key (WSKey)
    /// </summary>
    /// <value>Web Service Key (WSKey)</value>
    [JsonPropertyName("web_services_key")]
    [JsonRequired]
    public string WebServicesKey { get; set; }

    /// <summary>
    /// Customer Branch
    /// </summary>
    /// <value>Customer Branch</value>
    [JsonPropertyName("customer_branch")]
    [JsonRequired]
    public string CustomerBranch { get; set; }

    /// <summary>
    /// Address
    /// </summary>
    /// <value>Address</value>
    [JsonPropertyName("Address")]
    [JsonRequired]
    public String Address { get; set; }

    /// <summary>
    /// Address2
    /// </summary>
    /// <value>Address2</value>
    [JsonPropertyName("Address2")]
    public String Address2 { get; set; }

    /// <summary>
    /// PostalCode
    /// </summary>
    /// <value>PostalCode</value>
    [JsonPropertyName("PostalCode")]
    [JsonRequired]
    public String PostalCode { get; set; }

    /// <summary>
    /// City
    /// </summary>
    /// <value>City</value>
    [JsonPropertyName("City")]
    [JsonRequired]
    public String City { get; set; }

    /// <summary>
    /// State
    /// </summary>
    /// <value>State</value>
    [JsonPropertyName("State")]
    [JsonRequired]
    public String State { get; set; }

    /// <summary>
    /// Country
    /// </summary>
    /// <value>Country</value>
    [JsonPropertyName("country")]
    public String Country { get; set; }

    /// <summary>
    /// Phone
    /// </summary>
    /// <value>Phone</value>
    [JsonPropertyName("Phone")]
    public String Phone { get; set; }

    /// <summary>
    /// Email
    /// </summary>
    /// <value>Email</value>
    [JsonPropertyName("Email")]
    public String Email { get; set; }

    /// <summary>
    /// Instructions
    /// </summary>
    /// <value>Instructions</value>
    [JsonPropertyName("instructions")]
    public String Instructions { get; set; }

    /// <summary>
    /// Facility Code
    /// </summary>
    /// <value>Facility Code</value>
    [JsonPropertyName("facility_code")]
    public String FacilityCode { get; set; }

    /// <summary>
    /// Critical Pull Time (local time)
    /// </summary>
    /// <value>Critical Pull Time (local time)</value>
    [JsonPropertyName("lasership_critical_pull_time")]
    [JsonRequired]
    public String LasershipCriticalPullTime { get; set; }

    /// <summary>
    /// Critical Entry Time (local time)
    /// </summary>
    /// <value>Critical Entry Time (local time)</value>
    [JsonPropertyName("lasership_critical_entry_time")]
    [JsonRequired]
    public String LasershipCriticalEntryTime { get; set; }

    /// <summary>
    /// Declare piece attributes separately for every shipment, overrides individual attribute below.
    /// </summary>
    /// <value>Declare piece attributes separately for every shipment, overrides individual attribute below.</value>
    [JsonPropertyName("declare_piece_attributes_separately_for_every_shipment")]
    public Boolean DeclarePieceAttributesSeparatelyForEveryShipment { get; set; }

    /// <summary>
    /// Set this to true if your shipments will always contain Alcohol
    /// </summary>
    /// <value>Set this to true if your shipments will always contain Alcohol</value>
    [JsonPropertyName("AttrAlcohol")]
    public Boolean AttrAlcohol { get; set; }

    /// <summary>
    /// Set this to true if your shipments will always contain DryIce
    /// </summary>
    /// <value>Set this to true if your shipments will always contain DryIce</value>
    [JsonPropertyName("AttrDryIce")]
    public Boolean AttrDryIce { get; set; }

    /// <summary>
    /// Set this to true if your shipments will always contain Hazmat
    /// </summary>
    /// <value>Set this to true if your shipments will always contain Hazmat</value>
    [JsonPropertyName("AttrHazmat")]
    public Boolean AttrHazmat { get; set; }

    /// <summary>
    /// Set this to true if your shipments will always require Two Persons
    /// </summary>
    /// <value>Set this to true if your shipments will always require Two Persons</value>
    [JsonPropertyName("AttrTwoPersons")]
    public Boolean AttrTwoPersons { get; set; }

    /// <summary>
    /// Set this to true if your shipments will always contain Explosives
    /// </summary>
    /// <value>Set this to true if your shipments will always contain Explosives</value>
    [JsonPropertyName("AttrExplosive")]
    public Boolean AttrExplosive { get; set; }

    /// <summary>
    /// Set this to true if your shipments will always contain Controlled Substances
    /// </summary>
    /// <value>Set this to true if your shipments will always contain Controlled Substances</value>
    [JsonPropertyName("AttrControlledSubstance")]
    public Boolean AttrControlledSubstance { get; set; }

    /// <summary>
    /// Set this to true if your shipments will always require Refrigeration
    /// </summary>
    /// <value>Set this to true if your shipments will always require Refrigeration</value>
    [JsonPropertyName("AttrRefrigerated")]
    public Boolean AttrRefrigerated { get; set; }

    /// <summary>
    /// Set this to true if your shipments will always be Perishable
    /// </summary>
    /// <value>Set this to true if your shipments will always be Perishable</value>
    [JsonPropertyName("AttrPerishable")]
    public Boolean AttrPerishable { get; set; }

    /// <summary>
    /// Set this to true if your shipments will always use \&quot;No Return To Sender\&quot;
    /// </summary>
    /// <value>Set this to true if your shipments will always use \&quot;No Return To Sender\&quot;</value>
    [JsonPropertyName("AttrNoRTS")]
    public Boolean AttrNoRTS { get; set; }


    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        StringBuilder sb = new StringBuilder();
        sb.Append("class ConnectLasershipRequestBody {\n");
        sb.Append("  Nickname: ").Append(Nickname).Append("\n");
        sb.Append("  WebServicesId: ").Append(WebServicesId).Append("\n");
        sb.Append("  WebServicesKey: ").Append(WebServicesKey).Append("\n");
        sb.Append("  CustomerBranch: ").Append(CustomerBranch).Append("\n");
        sb.Append("  Address: ").Append(Address).Append("\n");
        sb.Append("  Address2: ").Append(Address2).Append("\n");
        sb.Append("  PostalCode: ").Append(PostalCode).Append("\n");
        sb.Append("  City: ").Append(City).Append("\n");
        sb.Append("  State: ").Append(State).Append("\n");
        sb.Append("  Country: ").Append(Country).Append("\n");
        sb.Append("  Phone: ").Append(Phone).Append("\n");
        sb.Append("  Email: ").Append(Email).Append("\n");
        sb.Append("  Instructions: ").Append(Instructions).Append("\n");
        sb.Append("  FacilityCode: ").Append(FacilityCode).Append("\n");
        sb.Append("  LasershipCriticalPullTime: ").Append(LasershipCriticalPullTime).Append("\n");
        sb.Append("  LasershipCriticalEntryTime: ").Append(LasershipCriticalEntryTime).Append("\n");
        sb.Append("  DeclarePieceAttributesSeparatelyForEveryShipment: ").Append(DeclarePieceAttributesSeparatelyForEveryShipment).Append("\n");
        sb.Append("  AttrAlcohol: ").Append(AttrAlcohol).Append("\n");
        sb.Append("  AttrDryIce: ").Append(AttrDryIce).Append("\n");
        sb.Append("  AttrHazmat: ").Append(AttrHazmat).Append("\n");
        sb.Append("  AttrTwoPersons: ").Append(AttrTwoPersons).Append("\n");
        sb.Append("  AttrExplosive: ").Append(AttrExplosive).Append("\n");
        sb.Append("  AttrControlledSubstance: ").Append(AttrControlledSubstance).Append("\n");
        sb.Append("  AttrRefrigerated: ").Append(AttrRefrigerated).Append("\n");
        sb.Append("  AttrPerishable: ").Append(AttrPerishable).Append("\n");
        sb.Append("  AttrNoRTS: ").Append(AttrNoRTS).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson(JsonSerializerOptions options)
    {
        return JsonSerializer.Serialize(this, options);
    }

}