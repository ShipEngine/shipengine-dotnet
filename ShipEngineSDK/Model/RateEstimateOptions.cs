/*
 * ShipEngine API
 *
 * The version of the OpenAPI document: 1.1.202406212006
 * Contact: sales@shipengine.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Text.Json.Serialization.Metadata;
using System.Text.RegularExpressions;

namespace ShipEngineSDK.Model;

/// <summary>
/// RateEstimateOptions
/// </summary>
public partial class RateEstimateOptions
{

    /// <summary>
    /// Gets or Sets Confirmation  CLOVUS
    /// </summary>
    [JsonPropertyName("confirmation")]
    public DeliveryConfirmation? Confirmation { get; set; }
    /// <summary>
    /// Gets or Sets AddressResidentialIndicator  CLOVUS
    /// </summary>
    [JsonPropertyName("address_residential_indicator")]
    public AddressResidentialIndicator? AddressResidentialIndicator { get; set; }
    /// <summary>
    /// A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) 
    /// </summary>
    /// <value>A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) </value>
    /// <example>
    /// CA
    /// </example>
    [JsonPropertyName("from_country_code")]
    public string FromCountryCode { get; set; }

    /// <summary>
    /// postal code
    /// </summary>
    /// <value>postal code</value>
    /// <example>
    /// 78756-3717
    /// </example>
    [JsonPropertyName("from_postal_code")]
    public string FromPostalCode { get; set; }

    /// <summary>
    /// from postal code
    /// </summary>
    /// <value>from postal code</value>
    /// <example>
    /// Austin
    /// </example>
    [JsonPropertyName("from_city_locality")]
    public string FromCityLocality { get; set; }

    /// <summary>
    /// From state province
    /// </summary>
    /// <value>From state province</value>
    /// <example>
    /// Austin
    /// </example>
    [JsonPropertyName("from_state_province")]
    public string FromStateProvince { get; set; }

    /// <summary>
    /// A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) 
    /// </summary>
    /// <value>A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) </value>
    /// <example>
    /// CA
    /// </example>
    [JsonPropertyName("to_country_code")]
    public string ToCountryCode { get; set; }

    /// <summary>
    /// postal code
    /// </summary>
    /// <value>postal code</value>
    /// <example>
    /// 78756-3717
    /// </example>
    [JsonPropertyName("to_postal_code")]
    public string ToPostalCode { get; set; }

    /// <summary>
    /// The city locality the package is being shipped to
    /// </summary>
    /// <value>The city locality the package is being shipped to</value>
    /// <example>
    /// Austin
    /// </example>
    [JsonPropertyName("to_city_locality")]
    public string ToCityLocality { get; set; }

    /// <summary>
    /// To state province
    /// </summary>
    /// <value>To state province</value>
    /// <example>
    /// Houston
    /// </example>
    [JsonPropertyName("to_state_province")]
    public string ToStateProvince { get; set; }

    /// <summary>
    /// The weight of the package
    /// </summary>
    /// <value>The weight of the package</value>
    [JsonPropertyName("weight")]
    public Weight Weight { get; set; }

    /// <summary>
    /// The dimensions of the package
    /// </summary>
    /// <value>The dimensions of the package</value>
    [JsonPropertyName("dimensions")]
    public Dimensions Dimensions { get; set; }

    /// <summary>
    /// ship date
    /// </summary>
    /// <value>ship date</value>
    /// <example>
    /// 2018-09-23T15:00Z
    /// </example>
    [JsonPropertyName("ship_date")]
    public DateTime ShipDate { get; set; }


    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        StringBuilder sb = new StringBuilder();
        sb.Append("class RateEstimateOptions {\n");
        sb.Append("  FromCountryCode: ").Append(FromCountryCode).Append("\n");
        sb.Append("  FromPostalCode: ").Append(FromPostalCode).Append("\n");
        sb.Append("  FromCityLocality: ").Append(FromCityLocality).Append("\n");
        sb.Append("  FromStateProvince: ").Append(FromStateProvince).Append("\n");
        sb.Append("  ToCountryCode: ").Append(ToCountryCode).Append("\n");
        sb.Append("  ToPostalCode: ").Append(ToPostalCode).Append("\n");
        sb.Append("  ToCityLocality: ").Append(ToCityLocality).Append("\n");
        sb.Append("  ToStateProvince: ").Append(ToStateProvince).Append("\n");
        sb.Append("  Weight: ").Append(Weight).Append("\n");
        sb.Append("  Dimensions: ").Append(Dimensions).Append("\n");
        sb.Append("  Confirmation: ").Append(Confirmation).Append("\n");
        sb.Append("  AddressResidentialIndicator: ").Append(AddressResidentialIndicator).Append("\n");
        sb.Append("  ShipDate: ").Append(ShipDate).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson(JsonSerializerOptions options)
    {
        return JsonSerializer.Serialize(this, options);
    }

}