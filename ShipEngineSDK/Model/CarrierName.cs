/*
 * ShipEngine API
 *
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202406212006
 * Contact: sales@shipengine.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Text.Json.Serialization.Metadata;
using System.Text.RegularExpressions;

namespace ShipEngineSDK.Model;

    /// <summary>
    /// The shipping carriers that are supported by ShipEngine
    /// </summary>
    /// <value>The shipping carriers that are supported by ShipEngine</value>
    public static class CarrierName
    {
        private static readonly HashSet<string> _values = new()
        {
            "access_worldwide",
            "amazon_buy_shipping",
            "amazon_shipping_uk",
            "apc",
            "asendia",
            "australia_post",
            "canada_post",
            "dhl_ecommerce",
            "dhl_express",
            "dhl_express_au",
            "dhl_express_ca",
            "dhl_express_uk",
            "dpd",
            "endicia",
            "fedex",
            "fedex_uk",
            "firstmile",
            "imex",
            "newgistics",
            "ontrac",
            "purolator_canada",
            "royal_mail",
            "rr_donnelley",
            "seko",
            "sendle",
            "stamps_com",
            "ups",
            "lasership",
        };

        public static string DefaultValue => AccessWorldwide;
        /// <summary>
        /// Enum AccessWorldwide for value: access_worldwide
        /// </summary>
        public static string AccessWorldwide { get; } = "access_worldwide";


        /// <summary>
        /// Enum AmazonBuyShipping for value: amazon_buy_shipping
        /// </summary>
        public static string AmazonBuyShipping { get; } = "amazon_buy_shipping";


        /// <summary>
        /// Enum AmazonShippingUk for value: amazon_shipping_uk
        /// </summary>
        public static string AmazonShippingUk { get; } = "amazon_shipping_uk";


        /// <summary>
        /// Enum Apc for value: apc
        /// </summary>
        public static string Apc { get; } = "apc";


        /// <summary>
        /// Enum Asendia for value: asendia
        /// </summary>
        public static string Asendia { get; } = "asendia";


        /// <summary>
        /// Enum AustraliaPost for value: australia_post
        /// </summary>
        public static string AustraliaPost { get; } = "australia_post";


        /// <summary>
        /// Enum CanadaPost for value: canada_post
        /// </summary>
        public static string CanadaPost { get; } = "canada_post";


        /// <summary>
        /// Enum DhlEcommerce for value: dhl_ecommerce
        /// </summary>
        public static string DhlEcommerce { get; } = "dhl_ecommerce";


        /// <summary>
        /// Enum DhlExpress for value: dhl_express
        /// </summary>
        public static string DhlExpress { get; } = "dhl_express";


        /// <summary>
        /// Enum DhlExpressAu for value: dhl_express_au
        /// </summary>
        public static string DhlExpressAu { get; } = "dhl_express_au";


        /// <summary>
        /// Enum DhlExpressCa for value: dhl_express_ca
        /// </summary>
        public static string DhlExpressCa { get; } = "dhl_express_ca";


        /// <summary>
        /// Enum DhlExpressUk for value: dhl_express_uk
        /// </summary>
        public static string DhlExpressUk { get; } = "dhl_express_uk";


        /// <summary>
        /// Enum Dpd for value: dpd
        /// </summary>
        public static string Dpd { get; } = "dpd";


        /// <summary>
        /// Enum Endicia for value: endicia
        /// </summary>
        public static string Endicia { get; } = "endicia";


        /// <summary>
        /// Enum Fedex for value: fedex
        /// </summary>
        public static string Fedex { get; } = "fedex";


        /// <summary>
        /// Enum FedexUk for value: fedex_uk
        /// </summary>
        public static string FedexUk { get; } = "fedex_uk";


        /// <summary>
        /// Enum Firstmile for value: firstmile
        /// </summary>
        public static string Firstmile { get; } = "firstmile";


        /// <summary>
        /// Enum Imex for value: imex
        /// </summary>
        public static string Imex { get; } = "imex";


        /// <summary>
        /// Enum Newgistics for value: newgistics
        /// </summary>
        public static string Newgistics { get; } = "newgistics";


        /// <summary>
        /// Enum Ontrac for value: ontrac
        /// </summary>
        public static string Ontrac { get; } = "ontrac";


        /// <summary>
        /// Enum PurolatorCanada for value: purolator_canada
        /// </summary>
        public static string PurolatorCanada { get; } = "purolator_canada";


        /// <summary>
        /// Enum RoyalMail for value: royal_mail
        /// </summary>
        public static string RoyalMail { get; } = "royal_mail";


        /// <summary>
        /// Enum RrDonnelley for value: rr_donnelley
        /// </summary>
        public static string RrDonnelley { get; } = "rr_donnelley";


        /// <summary>
        /// Enum Seko for value: seko
        /// </summary>
        public static string Seko { get; } = "seko";


        /// <summary>
        /// Enum Sendle for value: sendle
        /// </summary>
        public static string Sendle { get; } = "sendle";


        /// <summary>
        /// Enum StampsCom for value: stamps_com
        /// </summary>
        public static string StampsCom { get; } = "stamps_com";


        /// <summary>
        /// Enum Ups for value: ups
        /// </summary>
        public static string Ups { get; } = "ups";


        /// <summary>
        /// Enum Lasership for value: lasership
        /// </summary>
        public static string Lasership { get; } = "lasership";


        /// <summary>
        /// Is the given value a valid ?
        /// </summary>
        public static bool IsValid(string value)
        {
            return _values.Contains(value);
        }
    }
