// <auto-generated />
// DO NOT MODIFY THIS FILE

// Changes can be made in a corresponding partial file, or by changing
// the template in <root>/generation/templates and generating the class again.


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Text.Json.Serialization.Metadata;
using System.Text.RegularExpressions;

namespace ShipEngineSDK.Model;

/// <summary>
/// A label represents the physical sticker that you affix to a package to ship it.  ShipEngine makes it easy for you to [create labels](https://www.shipengine.com/docs/labels/create-a-label/) and then download them in PDF, PNG, or ZPL format so you can print them. 
/// </summary>
public partial class LabelRequest
{

    /// <summary>
    /// The label charge event. 
    /// </summary>
    /// <value>The label charge event. </value>
    [JsonPropertyName("charge_event"), JsonPropertyOrder(1)]
    public LabelChargeEvent? ChargeEvent { get; set; }

    /// <summary>
    /// The display format that the label should be shown in.
    /// </summary>
    /// <value>The display format that the label should be shown in.</value>
    [JsonPropertyName("display_scheme"), JsonPropertyOrder(2)]
    public DisplayScheme? DisplayScheme { get; set; }

    /// <summary>
    /// Indicates whether this is a return label.  You may also want to set the &#x60;rma_number&#x60; so you know what is being returned. 
    /// </summary>
    /// <value>Indicates whether this is a return label.  You may also want to set the &#x60;rma_number&#x60; so you know what is being returned. </value>
    [JsonPropertyName("is_return_label"), JsonPropertyOrder(3)]
    public bool? IsReturnLabel { get; set; }

    /// <summary>
    /// Gets or Sets LabelDownloadType
    /// </summary>
    [JsonPropertyName("label_download_type"), JsonPropertyOrder(4), JsonWriteOnly]
    public LabelDownloadType? LabelDownloadType { get; set; }

    /// <summary>
    /// The file format that you want the label to be in.  We recommend &#x60;pdf&#x60; format because it is supported by all carriers, whereas some carriers do not support the &#x60;png&#x60; or &#x60;zpl&#x60; formats. 
    /// </summary>
    /// <value>The file format that you want the label to be in.  We recommend &#x60;pdf&#x60; format because it is supported by all carriers, whereas some carriers do not support the &#x60;png&#x60; or &#x60;zpl&#x60; formats. </value>
    [JsonPropertyName("label_format"), JsonPropertyOrder(5)]
    public LabelFormat? LabelFormat { get; set; }

    /// <summary>
    /// The label image resource that was used to create a custom label image.
    /// </summary>
    /// <value>The label image resource that was used to create a custom label image.</value>
    /// <example>
    /// img_DtBXupDBxREpHnwEXhTfgK
    /// </example>
    [JsonPropertyName("label_image_id"), JsonPropertyOrder(6)]
    public string? LabelImageId { get; set; }

    /// <summary>
    /// The layout (size) that you want the label to be in.  The &#x60;label_format&#x60; determines which sizes are allowed.  &#x60;4x6&#x60; is supported for all label formats, whereas &#x60;letter&#x60; (8.5\&quot; x 11\&quot;) is only supported for &#x60;pdf&#x60; format. 
    /// </summary>
    /// <value>The layout (size) that you want the label to be in.  The &#x60;label_format&#x60; determines which sizes are allowed.  &#x60;4x6&#x60; is supported for all label formats, whereas &#x60;letter&#x60; (8.5\&quot; x 11\&quot;) is only supported for &#x60;pdf&#x60; format. </value>
    [JsonPropertyName("label_layout"), JsonPropertyOrder(7)]
    public LabelLayout? LabelLayout { get; set; }

    /// <summary>
    /// The &#x60;label_id&#x60; of the original (outgoing) label that the return label is for. This associates the two labels together, which is required by some carriers. 
    /// </summary>
    /// <value>The &#x60;label_id&#x60; of the original (outgoing) label that the return label is for. This associates the two labels together, which is required by some carriers. </value>
    /// <example>
    /// se-28529731
    /// </example>
    [JsonPropertyName("outbound_label_id"), JsonPropertyOrder(8), JsonWriteOnly]
    public string? OutboundLabelId { get; set; }

    /// <summary>
    /// An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value. 
    /// </summary>
    /// <value>An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value. </value>
    [JsonPropertyName("rma_number"), JsonPropertyOrder(9)]
    public string? RmaNumber { get; set; }

    /// <summary>
    /// The shipment information used to generate the label
    /// </summary>
    /// <value>The shipment information used to generate the label</value>
    [JsonPropertyName("shipment"), JsonPropertyOrder(10)]
    public ShipmentRequest? Shipment { get; set; }

    /// <summary>
    /// Indicate if this label is being used only for testing purposes. If true, then no charge will be added to your account.
    /// </summary>
    /// <value>Indicate if this label is being used only for testing purposes. If true, then no charge will be added to your account.</value>
    [JsonPropertyName("test_label"), JsonPropertyOrder(11), JsonWriteOnly, Obsolete]
    public bool? TestLabel { get; set; }

    /// <summary>
    /// Gets or Sets ValidateAddress
    /// </summary>
    [JsonPropertyName("validate_address"), JsonPropertyOrder(12), JsonWriteOnly]
    public ValidateAddress? ValidateAddress { get; set; }


    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class LabelRequest {\n");
#pragma warning disable CS0612 // Type or member is obsolete
        sb.Append("  ChargeEvent: ").Append(ChargeEvent).Append("\n");
        sb.Append("  DisplayScheme: ").Append(DisplayScheme).Append("\n");
        sb.Append("  IsReturnLabel: ").Append(IsReturnLabel).Append("\n");
        sb.Append("  LabelDownloadType: ").Append(LabelDownloadType).Append("\n");
        sb.Append("  LabelFormat: ").Append(LabelFormat).Append("\n");
        sb.Append("  LabelImageId: ").Append(LabelImageId).Append("\n");
        sb.Append("  LabelLayout: ").Append(LabelLayout).Append("\n");
        sb.Append("  OutboundLabelId: ").Append(OutboundLabelId).Append("\n");
        sb.Append("  RmaNumber: ").Append(RmaNumber).Append("\n");
        sb.Append("  Shipment: ").Append(Shipment).Append("\n");
        sb.Append("  TestLabel: ").Append(TestLabel).Append("\n");
        sb.Append("  ValidateAddress: ").Append(ValidateAddress).Append("\n");
#pragma warning restore CS0612 // Type or member is obsolete
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson(JsonSerializerOptions options)
    {
        return JsonSerializer.Serialize(this, options);
    }

}