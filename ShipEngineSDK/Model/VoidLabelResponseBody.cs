/*
 * ShipEngine API
 *
 * The version of the OpenAPI document: 1.1.202406212006
 * Contact: sales@shipengine.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Text.Json.Serialization.Metadata;
using System.Text.RegularExpressions;

namespace ShipEngineSDK.Model;

/// <summary>
/// A void label response body
/// </summary>
public partial class VoidLabelResponseBody
{

    /// <summary>
    /// Indicates whether the attempt to void the label was successful
    /// </summary>
    /// <value>Indicates whether the attempt to void the label was successful</value>
    /// <remarks>
    /// This should not be used for input as it will be ignored on serialization.
    /// </remarks>
    /// <example>
    /// false
    /// </example>
    [JsonPropertyName("approved"), JsonInclude]
    public bool? Approved { get; set; }

    /// <summary>
    /// Gets or Sets Message
    /// </summary>
    /// <remarks>
    /// This should not be used for input as it will be ignored on serialization.
    /// </remarks>
    /// <example>
    /// Unable to delete FedEx shipment. Unable to retrieve record from database.
    /// </example>
    [JsonPropertyName("message"), JsonInclude]
    public string? Message { get; set; }

    /// <summary>
    /// Indicates a normalized reason for the conditions if the void attempt was not approved. Will not populate if approved is true. â€œunknownâ€ codes may be specified later.
    /// </summary>
    /// <value>Indicates a normalized reason for the conditions if the void attempt was not approved. Will not populate if approved is true. â€œunknownâ€ codes may be specified later.</value>
    /// <remarks>
    /// This should not be used for input as it will be ignored on serialization.
    /// </remarks>
    [JsonPropertyName("reason_code"), JsonInclude]
    public ReasonCode? ReasonCode { get; set; }


    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class VoidLabelResponseBody {\n");
#pragma warning disable CS0612 // Type or member is obsolete
        sb.Append("  Approved: ").Append(Approved).Append("\n");
        sb.Append("  Message: ").Append(Message).Append("\n");
        sb.Append("  ReasonCode: ").Append(ReasonCode).Append("\n");
#pragma warning restore CS0612 // Type or member is obsolete
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson(JsonSerializerOptions options)
    {
        return JsonSerializer.Serialize(this, options);
    }

}