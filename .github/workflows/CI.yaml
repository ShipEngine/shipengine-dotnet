# GitHub Actions workflow
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/contexts-and-expression-syntax-for-github-actions

name: CI

on: [push]

jobs:
  dot_net_framework_build:
    name: .Net Framework 4.6.1
    runs-on: windows-latest
    timeout-minutes: 10

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup MSBuild Path
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1
        with:
          nuget-version: "5.x"

      - name: Restore NuGet Packages
        run: nuget restore shipengine-dotnet.sln

      - name: Build .Net App
        run: msbuild shipengine-dotnet.sln /p:Configuration=Release

      - name: Run Test
        run: dotnet test ShipEngine.Tests/bin/Release/net461/ShipEngine.Tests.dll

  dot_net_core:
    name: .Net Core 2.1.x, 3.1.x, and .Net 5.0 on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
          - windows-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup dotnet 2.1.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.1.x

      - name: Setup dotnet 3.1.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x

      - name: Setup dotnet 5.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Dotnet tool restore
        run: dotnet tool restore

      - name: Lint
        if: ${{ matrix.os == 'ubuntu-latest'}}
        run: dotnet format --check

      - name: Dotnet Build
        run: dotnet build --configuration Release

      - name: Run 2.1.x Tests
        run: dotnet test -f netcoreapp2.1

      - name: Run 3.1.x Tests
        run: dotnet test -f netcoreapp3.1

      - name: Run 5.0 Tests
        run: dotnet test -f net5.0 --settings ShipEngine.Tests/coverage.runsettings

      - name: Move generated lcov file to expected location
        shell: bash
        run: |
          ls -Rlh ShipEngine.Tests/TestResults/*/coverage.info
          cat ShipEngine.Tests/TestResults/*/coverage.info > ShipEngine.Tests/TestResults/lcov.info

      - name: Send code coverage results to Coveralls
        uses: coverallsapp/github-action@v1.1.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel: true
          flag-name: run-${{ matrix.test_number }}
          path-to-lcov: ShipEngine.Tests/TestResults/lcov.info

  coverage:
    needs: dot_net_core
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true
