# GitHub Actions workflow
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/contexts-and-expression-syntax-for-github-actions

name: CI

on: [push]

jobs:
  dot_net_framework_test:
    name: .Net Framework 8
    runs-on: windows-latest
    timeout-minutes: 10

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup MSBuild Path
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1
        with:
          nuget-version: "6.x"

      - name: Restore NuGet Packages
        run: nuget restore shipengine-dotnet.sln

      - name: Build .Net App
        run: msbuild shipengine-dotnet.sln /p:Configuration=Release

      - name: Run Test
        run: dotnet test ShipEngine.Tests/bin/Release/net8.0/ShipEngine.Tests.dll

  nuget-deploy:
    runs-on: ubuntu-latest
    needs: [dot_net_framework_test]
    if: github.ref == 'refs/heads/main'
    steps:
      # Checkout code if release was created
      - uses: actions/checkout@v2

      # Setup Dotnet if release was created
      - name: Setup dotnet 8.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x

      - name: publish on version change
        id: publish_nuget
        uses: brandedoutcast/publish-nuget@v2.5.5

        with:
          # Filepath of the project to be packaged, relative to root of repository
          PROJECT_FILE_PATH: ShipEngine/ShipEngine.csproj

          # NuGet package id, used for version detection & defaults to project name
          PACKAGE_NAME: ShipEngine

          # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
          # VERSION_FILE_PATH: Directory.Build.props

          # Regex pattern to extract version info in a capturing group
          # VERSION_REGEX: ^\s*<Version>(.*)<\/Version>\s*$

          # Flag to toggle git tagging, enabled by default
          TAG_COMMIT: true

          # Format of the git tag, [*] gets replaced with actual version
          TAG_FORMAT: v*

          # API key to authenticate with NuGet server
          NUGET_KEY: ${{secrets.NUGET_KEY}}

          # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
          INCLUDE_SYMBOLS: false
