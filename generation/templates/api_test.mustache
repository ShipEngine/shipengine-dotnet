{{>partial_header}}
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;
using {{packageName}}.Client;
{{#hasImport}}
// uncomment below to import models
using {{packageName}}.{{modelPackage}};
{{/hasImport}}
using ShipEngineTest;

namespace {{packageName}}.Test.Api
{
    /// <summary>
    ///  Class for testing {{classname}}
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class {{classname}}Tests : IDisposable
    {
        {{^nonPublicApi}}
        private ShipEngine instance;

        {{/nonPublicApi}}
        public {{classname}}Tests()
        {
            {{^nonPublicApi}}
            var config = new Config("test-key");
            var mockShipEngineFixture = new MockShipEngineFixture(config);
            instance = mockShipEngineFixture.ShipEngine;
            {{/nonPublicApi}}
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of {{classname}}
        /// </summary>
        [Fact]
        public void {{operationId}}InstanceTest()
        {
            // TODO uncomment below to test 'IsType' {{classname}}
            //Assert.IsType<{{classname}}>(instance);
        }
        {{#operations}}
        {{#operation}}

        /// <summary>
        /// Test {{operationId}}
        /// </summary>
        [Fact]
        public void {{operationId}}Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            {{#allParams}}
            //{{{dataType}}} {{paramName}} = null;
            {{/allParams}}
            //{{#returnType}}var response = {{/returnType}}instance.{{operationId}}({{#allParams}}{{paramName}}{{^-last}}, {{/-last}}{{/allParams}});
            {{#returnType}}
            //Assert.IsType<{{{.}}}>(response);
            {{/returnType}}
        }
        {{/operation}}
        {{/operations}}
    }
}
