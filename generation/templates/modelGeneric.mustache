/// <summary>
/// {{description}}{{^description}}{{classname}}{{/description}}
/// </summary>
{{#vendorExtensions.x-cls-compliant}}
[CLSCompliant({{{vendorExtensions.x-cls-compliant}}})]
{{/vendorExtensions.x-cls-compliant}}
{{#vendorExtensions.x-com-visible}}
[ComVisible({{{vendorExtensions.x-com-visible}}})]
{{/vendorExtensions.x-com-visible}}
{{^useUnityWebRequest}}
{{#discriminator}}
[JsonConverter(typeof(JsonSubtypes), "{{{discriminatorName}}}")]
{{#mappedModels}}
[JsonSubtypes.KnownSubType(typeof({{{modelName}}}), "{{^vendorExtensions.x-discriminator-value}}{{{mappingName}}}{{/vendorExtensions.x-discriminator-value}}{{#vendorExtensions.x-discriminator-value}}{{{.}}}{{/vendorExtensions.x-discriminator-value}}")]
{{/mappedModels}}
{{/discriminator}}
{{/useUnityWebRequest}}
{{>visibility}} partial class {{classname}}{{#lambda.firstDot}}{{#parent}} : .{{/parent}}{{#validatable}} : .{{/validatable}}{{#equatable}} : .{{/equatable}}{{/lambda.firstDot}}{{#lambda.joinWithComma}}{{#parent}}{{{.}}}  {{/parent}}{{#equatable}}IEquatable<{{classname}}>  {{/equatable}}{{#validatable}}IValidatableObject  {{/validatable}}{{/lambda.joinWithComma}}
{
    {{#vars}}
    {{#items.isEnum}}
    {{#items}}
    {{^complexType}}
{{>modelInnerEnum}}
    {{/complexType}}
    {{/items}}
    {{/items.isEnum}}
    {{#isEnum}}
    {{^complexType}}
{{>modelInnerEnum}}
    {{/complexType}}
    {{/isEnum}}
    {{#isEnum}}

    /// <summary>
    /// {{description}}{{^description}}Gets or Sets {{{name}}}{{/description}}  CLOVUS
    /// </summary>
    {{#description}}
    /// <value>{{.}}</value>
    {{/description}}
    {{#example}}
    /// <example>
    /// {{.}}
    /// </example>
    {{/example}}
    [JsonPropertyName("{{baseName}}")]{{#required}}
    [JsonRequired]{{/required}}
    {{#deprecated}}
    [Obsolete]
    {{/deprecated}}
    public {{{complexType}}}{{^complexType}}{{{datatypeWithEnum}}}{{/complexType}}{{^isContainer}}{{^required}}?{{/required}}{{/isContainer}} {{name}} { get; set; }{{#required}} = new();

    {{/required}}
    {{/isEnum}}
    {{/vars}}

    {{#vars}}
    {{^isInherited}}
    {{^isEnum}}
    {{#items.vars}}
    {{#-first}}
    public class {{classname}}Item
    {
    {{/-first}}
        /// <summary>
        /// {{description}}{{^description}}Gets or Sets {{{name}}}{{/description}}
        /// </summary>{{#description}}
        /// <value>{{.}}</value>{{/description}}
        {{#example}}
        /// <example>
        /// {{.}}
        /// </example>
        {{/example}}
        [JsonPropertyName("{{baseName}}")]{{#required}}
        [JsonRequired]{{/required}}
        {{#isDate}}
        [JsonConverter(typeof(DateJsonConverter))]
        {{/isDate}}
        {{#deprecated}}
        [Obsolete]
        {{/deprecated}}
        public {{{dataType}}}{{#isNullable}}?{{/isNullable}} {{name}} { get; set; }

    {{#-last}}
    }
    {{/-last}}
    {{/items.vars}}
    /// <summary>
    /// {{description}}{{^description}}Gets or Sets {{{name}}}{{/description}}
    /// </summary>{{#description}}
    /// <value>{{.}}</value>{{/description}}
    {{#example}}
    /// <example>
    /// {{.}}
    /// </example>
    {{/example}}
    [JsonPropertyName("{{baseName}}")]{{#required}}
    [JsonRequired]{{/required}}
    {{#isDate}}
    [JsonConverter(typeof(DateJsonConverter))]
    {{/isDate}}
    {{#deprecated}}
    [Obsolete]
    {{/deprecated}}
    public {{#items.vars}}{{#-first}}List<{{classname}}Item>{{/-first}}{{/items.vars}}{{^items.vars}}{{{dataType}}}{{/items.vars}} {{name}} { get; set; }

    {{/isEnum}}
    {{/isInherited}}
    {{/vars}}
    {{#isAdditionalPropertiesTrue}}
    /// <summary>
    /// Gets or Sets additional properties
    /// </summary>
    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties { get; set; }

    {{/isAdditionalPropertiesTrue}}

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        StringBuilder sb = new StringBuilder();
        sb.Append("class {{classname}} {\n");
        {{#parent}}
        sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
        {{/parent}}
        {{#vars}}
        sb.Append("  {{name}}: ").Append({{name}}).Append("\n");
        {{/vars}}
        {{#isAdditionalPropertiesTrue}}
        sb.Append("  AdditionalProperties: ").Append(AdditionalProperties).Append("\n");
        {{/isAdditionalPropertiesTrue}}
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public {{#parent}}{{^isArray}}{{^isMap}}override {{/isMap}}{{/isArray}}{{/parent}}{{^parent}}virtual {{/parent}}string ToJson(JsonSerializerOptions options)
    {
        return JsonSerializer.Serialize(this, options);
    }
    {{#equatable}}

    /// <summary>
    /// Returns true if objects are equal
    /// </summary>
    /// <param name="input">Object to be compared</param>
    /// <returns>Boolean</returns>
    public override bool Equals(object input)
    {
        {{#useCompareNetObjects}}
        return OpenAPIClientUtils.compareLogic.Compare(this, input as {{classname}}).AreEqual;
        {{/useCompareNetObjects}}
        {{^useCompareNetObjects}}
        return this.Equals(input as {{classname}});
        {{/useCompareNetObjects}}
    }

    /// <summary>
    /// Returns true if {{classname}} instances are equal
    /// </summary>
    /// <param name="input">Instance of {{classname}} to be compared</param>
    /// <returns>Boolean</returns>
    public bool Equals({{classname}} input)
    {
        {{#useCompareNetObjects}}
        return OpenAPIClientUtils.compareLogic.Compare(this, input).AreEqual;
        {{/useCompareNetObjects}}
        {{^useCompareNetObjects}}
        if (input == null)
        {
            return false;
        }
        return {{#vars}}{{#parent}}base.Equals(input) && {{/parent}}{{^isContainer}}
            (
                this.{{name}} == input.{{name}} ||
                {{^vendorExtensions.x-is-value-type}}
                (this.{{name}} != null &&
                this.{{name}}.Equals(input.{{name}}))
                {{/vendorExtensions.x-is-value-type}}
                {{#vendorExtensions.x-is-value-type}}
                this.{{name}}.Equals(input.{{name}})
                {{/vendorExtensions.x-is-value-type}}
            ){{^-last}} && {{/-last}}{{/isContainer}}{{#isContainer}}
            (
                this.{{name}} == input.{{name}} ||
                {{^vendorExtensions.x-is-value-type}}this.{{name}} != null &&
                input.{{name}} != null &&
                {{/vendorExtensions.x-is-value-type}}this.{{name}}.SequenceEqual(input.{{name}})
            ){{^-last}} && {{/-last}}{{/isContainer}}{{/vars}}{{^vars}}{{#parent}}base.Equals(input){{/parent}}{{^parent}}false{{/parent}}{{/vars}}{{^isAdditionalPropertiesTrue}};{{/isAdditionalPropertiesTrue}}
            {{#isAdditionalPropertiesTrue}}
            && (this.AdditionalProperties.Count == input.AdditionalProperties.Count && !this.AdditionalProperties.Except(input.AdditionalProperties).Any());
            {{/isAdditionalPropertiesTrue}}
        {{/useCompareNetObjects}}
    }

    /// <summary>
    /// Gets the hash code
    /// </summary>
    /// <returns>Hash code</returns>
    public override int GetHashCode()
    {
        unchecked // Overflow is fine, just wrap
        {
            {{#parent}}
            int hashCode = base.GetHashCode();
            {{/parent}}
            {{^parent}}
            int hashCode = 41;
            {{/parent}}
            {{#vars}}
            {{^vendorExtensions.x-is-value-type}}
            if (this.{{name}} != null)
            {
                hashCode = (hashCode * 59) + this.{{name}}.GetHashCode();
            }
            {{/vendorExtensions.x-is-value-type}}
            {{#vendorExtensions.x-is-value-type}}
            hashCode = (hashCode * 59) + this.{{name}}.GetHashCode();
            {{/vendorExtensions.x-is-value-type}}
            {{/vars}}
            {{#isAdditionalPropertiesTrue}}
            if (this.AdditionalProperties != null)
            {
                hashCode = (hashCode * 59) + this.AdditionalProperties.GetHashCode();
            }
            {{/isAdditionalPropertiesTrue}}
            return hashCode;
        }
    }
    {{/equatable}}

{{#validatable}}
{{>validatable}}
{{/validatable}}
}