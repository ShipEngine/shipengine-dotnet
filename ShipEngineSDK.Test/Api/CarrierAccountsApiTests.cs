/*
 * ShipEngine API
 *
 * The version of the OpenAPI document: 1.1.202406212006
 * Contact: sales@shipengine.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using ShipEngineSDK.Client;
// uncomment below to import models
using ShipEngineSDK.Model;
using ShipEngineTest;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Reflection;
using Xunit;

namespace ShipEngineSDK.Test.Api
{
    /// <summary>
    ///  Class for testing CarrierAccountsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CarrierAccountsApiTests : IDisposable
    {
        private ShipEngine instance;

        public CarrierAccountsApiTests()
        {
            var config = new Config("test-key");
            var mockShipEngineFixture = new MockShipEngineFixture(config);
            instance = mockShipEngineFixture.ShipEngine;
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CarrierAccountsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CarrierAccountsApi
            //Assert.IsType<CarrierAccountsApi>(instance);
        }

        /// <summary>
        /// Test ConnectCarrier
        /// </summary>
        [Fact]
        public void ConnectCarrierTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CarrierName carrierName = null;
            //ConnectCarrierRequestBody connectCarrierRequestBody = null;
            //var response = instance.ConnectCarrier(carrierName, connectCarrierRequestBody);
            //Assert.IsType<ConnectCarrierResponseBody>(response);
        }

        /// <summary>
        /// Test DisconnectCarrier
        /// </summary>
        [Fact]
        public void DisconnectCarrierTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CarrierName carrierName = null;
            //string carrierId = null;
            //var response = instance.DisconnectCarrier(carrierName, carrierId);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test GetCarrierSettings
        /// </summary>
        [Fact]
        public void GetCarrierSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CarrierNameWithSettings carrierName = null;
            //string carrierId = null;
            //var response = instance.GetCarrierSettings(carrierName, carrierId);
            //Assert.IsType<GetCarrierSettingsResponseBody>(response);
        }

        /// <summary>
        /// Test UpdateCarrierSettings
        /// </summary>
        [Fact]
        public void UpdateCarrierSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CarrierNameWithSettings carrierName = null;
            //string carrierId = null;
            //UpdateCarrierSettingsRequestBody updateCarrierSettingsRequestBody = null;
            //var response = instance.UpdateCarrierSettings(carrierName, carrierId, updateCarrierSettingsRequestBody);
            //Assert.IsType<string>(response);
        }
    }
}