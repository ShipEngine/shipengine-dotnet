/*
 * ShipEngine API
 *
 * The version of the OpenAPI document: 1.1.202406212006
 * Contact: sales@shipengine.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using ShipEngineSDK.Client;
// uncomment below to import models
using ShipEngineSDK.Model;
using ShipEngineTest;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Reflection;
using Xunit;

namespace ShipEngineSDK.Test.Api
{
    /// <summary>
    ///  Class for testing LabelsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class LabelsApiTests : IDisposable
    {
        private ShipEngine instance;

        public LabelsApiTests()
        {
            var config = new Config("test-key");
            var mockShipEngineFixture = new MockShipEngineFixture(config);
            instance = mockShipEngineFixture.ShipEngine;
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of LabelsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' LabelsApi
            //Assert.IsType<LabelsApi>(instance);
        }

        /// <summary>
        /// Test CreateLabel
        /// </summary>
        [Fact]
        public void CreateLabelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateLabelRequestBody createLabelRequestBody = null;
            //var response = instance.CreateLabel(createLabelRequestBody);
            //Assert.IsType<CreateLabelResponseBody>(response);
        }

        /// <summary>
        /// Test CreateLabelFromRate
        /// </summary>
        [Fact]
        public void CreateLabelFromRateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string rateId = null;
            //CreateLabelFromRateRequestBody createLabelFromRateRequestBody = null;
            //var response = instance.CreateLabelFromRate(rateId, createLabelFromRateRequestBody);
            //Assert.IsType<CreateLabelFromRateResponseBody>(response);
        }

        /// <summary>
        /// Test CreateLabelFromShipment
        /// </summary>
        [Fact]
        public void CreateLabelFromShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //CreateLabelFromShipmentRequestBody createLabelFromShipmentRequestBody = null;
            //var response = instance.CreateLabelFromShipment(shipmentId, createLabelFromShipmentRequestBody);
            //Assert.IsType<CreateLabelFromShipmentResponseBody>(response);
        }

        /// <summary>
        /// Test CreateReturnLabel
        /// </summary>
        [Fact]
        public void CreateReturnLabelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string labelId = null;
            //CreateReturnLabelRequestBody createReturnLabelRequestBody = null;
            //var response = instance.CreateReturnLabel(labelId, createReturnLabelRequestBody);
            //Assert.IsType<CreateReturnLabelResponseBody>(response);
        }

        /// <summary>
        /// Test GetLabelByExternalShipmentId
        /// </summary>
        [Fact]
        public void GetLabelByExternalShipmentIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string externalShipmentId = null;
            //LabelDownloadType? labelDownloadType = null;
            //var response = instance.GetLabelByExternalShipmentId(externalShipmentId, labelDownloadType);
            //Assert.IsType<GetLabelByExternalShipmentIdResponseBody>(response);
        }

        /// <summary>
        /// Test GetLabelById
        /// </summary>
        [Fact]
        public void GetLabelByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string labelId = null;
            //LabelDownloadType? labelDownloadType = null;
            //var response = instance.GetLabelById(labelId, labelDownloadType);
            //Assert.IsType<GetLabelByIdResponseBody>(response);
        }

        /// <summary>
        /// Test GetTrackingLogFromLabel
        /// </summary>
        [Fact]
        public void GetTrackingLogFromLabelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string labelId = null;
            //var response = instance.GetTrackingLogFromLabel(labelId);
            //Assert.IsType<GetTrackingLogFromLabelResponseBody>(response);
        }

        /// <summary>
        /// Test ListLabels
        /// </summary>
        [Fact]
        public void ListLabelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LabelStatus? labelStatus = null;
            //string serviceCode = null;
            //string carrierId = null;
            //string trackingNumber = null;
            //string batchId = null;
            //string rateId = null;
            //string shipmentId = null;
            //string warehouseId = null;
            //DateTime? createdAtStart = null;
            //DateTime? createdAtEnd = null;
            //int? page = null;
            //int? pageSize = null;
            //SortDir? sortDir = null;
            //string sortBy = null;
            //var response = instance.ListLabels(labelStatus, serviceCode, carrierId, trackingNumber, batchId, rateId, shipmentId, warehouseId, createdAtStart, createdAtEnd, page, pageSize, sortDir, sortBy);
            //Assert.IsType<ListLabelsResponseBody>(response);
        }

        /// <summary>
        /// Test VoidLabel
        /// </summary>
        [Fact]
        public void VoidLabelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string labelId = null;
            //var response = instance.VoidLabel(labelId);
            //Assert.IsType<VoidLabelResponseBody>(response);
        }
    }
}