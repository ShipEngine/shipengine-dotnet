/*
 * ShipEngine API
 *
 * The version of the OpenAPI document: 1.1.202406212006
 * Contact: sales@shipengine.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using ShipEngineSDK.Client;
using ShipEngineSDK.Model;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text.Json;
using Xunit;

namespace ShipEngineSDK.Test.Model
{
    /// <summary>
    ///  Class for testing SmartPostHub
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SmartPostHubTests
    {
        [Fact]
        public void ParameterlessConstructorSetsDefaultValue()
        {
            var testModel = new SmartPostHub();
            Assert.Equal("none", testModel.ToString());
        }

        [Fact]
        public void NoneTest()
        {
            var testModel = SmartPostHub.None;
            Assert.Equal("none", testModel.ToString());
        }

        [Fact]
        public void AllentownPaTest()
        {
            var testModel = SmartPostHub.AllentownPa;
            Assert.Equal("allentown_pa", testModel.ToString());
        }

        [Fact]
        public void AtlantaGaTest()
        {
            var testModel = SmartPostHub.AtlantaGa;
            Assert.Equal("atlanta_ga", testModel.ToString());
        }

        [Fact]
        public void BaltimoreMdTest()
        {
            var testModel = SmartPostHub.BaltimoreMd;
            Assert.Equal("baltimore_md", testModel.ToString());
        }

        [Fact]
        public void CharlotteNcTest()
        {
            var testModel = SmartPostHub.CharlotteNc;
            Assert.Equal("charlotte_nc", testModel.ToString());
        }

        [Fact]
        public void ChinoCaTest()
        {
            var testModel = SmartPostHub.ChinoCa;
            Assert.Equal("chino_ca", testModel.ToString());
        }

        [Fact]
        public void DallasTxTest()
        {
            var testModel = SmartPostHub.DallasTx;
            Assert.Equal("dallas_tx", testModel.ToString());
        }

        [Fact]
        public void DenverCoTest()
        {
            var testModel = SmartPostHub.DenverCo;
            Assert.Equal("denver_co", testModel.ToString());
        }

        [Fact]
        public void DetroitMiTest()
        {
            var testModel = SmartPostHub.DetroitMi;
            Assert.Equal("detroit_mi", testModel.ToString());
        }

        [Fact]
        public void EdisonNjTest()
        {
            var testModel = SmartPostHub.EdisonNj;
            Assert.Equal("edison_nj", testModel.ToString());
        }

        [Fact]
        public void GroveCityOhTest()
        {
            var testModel = SmartPostHub.GroveCityOh;
            Assert.Equal("grove_city_oh", testModel.ToString());
        }

        [Fact]
        public void GroveportOhTest()
        {
            var testModel = SmartPostHub.GroveportOh;
            Assert.Equal("groveport_oh", testModel.ToString());
        }

        [Fact]
        public void HoustonTxTest()
        {
            var testModel = SmartPostHub.HoustonTx;
            Assert.Equal("houston_tx", testModel.ToString());
        }

        [Fact]
        public void IndianapolisInTest()
        {
            var testModel = SmartPostHub.IndianapolisIn;
            Assert.Equal("indianapolis_in", testModel.ToString());
        }

        [Fact]
        public void KansasCityKsTest()
        {
            var testModel = SmartPostHub.KansasCityKs;
            Assert.Equal("kansas_city_ks", testModel.ToString());
        }

        [Fact]
        public void LosAngelesCaTest()
        {
            var testModel = SmartPostHub.LosAngelesCa;
            Assert.Equal("los_angeles_ca", testModel.ToString());
        }

        [Fact]
        public void MartinsburgWvTest()
        {
            var testModel = SmartPostHub.MartinsburgWv;
            Assert.Equal("martinsburg_wv", testModel.ToString());
        }

        [Fact]
        public void MemphisTnTest()
        {
            var testModel = SmartPostHub.MemphisTn;
            Assert.Equal("memphis_tn", testModel.ToString());
        }

        [Fact]
        public void MinneapolisMnTest()
        {
            var testModel = SmartPostHub.MinneapolisMn;
            Assert.Equal("minneapolis_mn", testModel.ToString());
        }

        [Fact]
        public void NewBerlinWiTest()
        {
            var testModel = SmartPostHub.NewBerlinWi;
            Assert.Equal("new_berlin_wi", testModel.ToString());
        }

        [Fact]
        public void NorthboroughMaTest()
        {
            var testModel = SmartPostHub.NorthboroughMa;
            Assert.Equal("northborough_ma", testModel.ToString());
        }

        [Fact]
        public void OrlandoFlTest()
        {
            var testModel = SmartPostHub.OrlandoFl;
            Assert.Equal("orlando_fl", testModel.ToString());
        }

        [Fact]
        public void PhoneixAzTest()
        {
            var testModel = SmartPostHub.PhoneixAz;
            Assert.Equal("phoneix_az", testModel.ToString());
        }

        [Fact]
        public void PittsburghPaTest()
        {
            var testModel = SmartPostHub.PittsburghPa;
            Assert.Equal("pittsburgh_pa", testModel.ToString());
        }

        [Fact]
        public void RenoNvTest()
        {
            var testModel = SmartPostHub.RenoNv;
            Assert.Equal("reno_nv", testModel.ToString());
        }

        [Fact]
        public void SacramentoCaTest()
        {
            var testModel = SmartPostHub.SacramentoCa;
            Assert.Equal("sacramento_ca", testModel.ToString());
        }

        [Fact]
        public void SaltLakeCityUtTest()
        {
            var testModel = SmartPostHub.SaltLakeCityUt;
            Assert.Equal("salt_lake_city_ut", testModel.ToString());
        }

        [Fact]
        public void SeattleWaTest()
        {
            var testModel = SmartPostHub.SeattleWa;
            Assert.Equal("seattle_wa", testModel.ToString());
        }

        [Fact]
        public void StLouisMoTest()
        {
            var testModel = SmartPostHub.StLouisMo;
            Assert.Equal("st_louis_mo", testModel.ToString());
        }

        [Fact]
        public void WindsorCtTest()
        {
            var testModel = SmartPostHub.WindsorCt;
            Assert.Equal("windsor_ct", testModel.ToString());
        }

        [Fact]
        public void NewarkNyTest()
        {
            var testModel = SmartPostHub.NewarkNy;
            Assert.Equal("newark_ny", testModel.ToString());
        }

        [Fact]
        public void SouthBrunswickNjTest()
        {
            var testModel = SmartPostHub.SouthBrunswickNj;
            Assert.Equal("south_brunswick_nj", testModel.ToString());
        }

        [Fact]
        public void ScrantonPaTest()
        {
            var testModel = SmartPostHub.ScrantonPa;
            Assert.Equal("scranton_pa", testModel.ToString());
        }

        [Fact]
        public void WheelingIlTest()
        {
            var testModel = SmartPostHub.WheelingIl;
            Assert.Equal("wheeling_il", testModel.ToString());
        }


        [Fact]
        public void CustomValueTest()
        {
            var testModel = new SmartPostHub("a custom value");
            Assert.Equal("a custom value", testModel.ToString());
        }

        /// <summary>
        /// Test deserialize a SmartPostHub from a string
        /// </summary>
        [Fact]
        public void CanDeserializeFromStringTest()
        {
            var testModel = JsonSerializer.Deserialize<SmartPostHub>("\"a custom value\"");
            Assert.IsType<SmartPostHub>(testModel);
            Assert.Equal("a custom value", testModel.ToString());
        }
    }

}