/*
 * ShipEngine API
 *
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others.  # Authentication  <!- - ReDoc-Inject: <security-definitions> - ->
 *
 * The version of the OpenAPI document: 1.1.202406212006
 * Contact: sales@shipengine.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;
using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using System.Text.Json;
using ShipEngineSDK.Model;
using ShipEngineSDK.Client;
using System.Reflection;

namespace ShipEngineSDK.Test.Model 
{
    /// <summary>
    ///  Class for testing ConnectLasershipRequestBody
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ConnectLasershipRequestBodyTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ConnectLasershipRequestBody
        //private ConnectLasershipRequestBody instance;

        public ConnectLasershipRequestBodyTests()
        {
            // TODO uncomment below to create an instance of ConnectLasershipRequestBody
            //instance = new ConnectLasershipRequestBody();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ConnectLasershipRequestBody
        /// </summary>
        [Fact]
        public void ConnectLasershipRequestBodyInstanceTest()
        {
            // TODO uncomment below to test "IsType" ConnectLasershipRequestBody
            //Assert.IsType<ConnectLasershipRequestBody>(instance);
        }

        /// <summary>
        /// Test the property 'Nickname'
        /// </summary>
        [Fact]
        public void NicknameTest()
        {
            // TODO unit test for the property 'Nickname'
        }

        /// <summary>
        /// Test the property 'WebServicesId'
        /// </summary>
        [Fact]
        public void WebServicesIdTest()
        {
            // TODO unit test for the property 'WebServicesId'
        }

        /// <summary>
        /// Test the property 'WebServicesKey'
        /// </summary>
        [Fact]
        public void WebServicesKeyTest()
        {
            // TODO unit test for the property 'WebServicesKey'
        }

        /// <summary>
        /// Test the property 'CustomerBranch'
        /// </summary>
        [Fact]
        public void CustomerBranchTest()
        {
            // TODO unit test for the property 'CustomerBranch'
        }

        /// <summary>
        /// Test the property 'Address'
        /// </summary>
        [Fact]
        public void AddressTest()
        {
            // TODO unit test for the property 'Address'
        }

        /// <summary>
        /// Test the property 'Address2'
        /// </summary>
        [Fact]
        public void Address2Test()
        {
            // TODO unit test for the property 'Address2'
        }

        /// <summary>
        /// Test the property 'PostalCode'
        /// </summary>
        [Fact]
        public void PostalCodeTest()
        {
            // TODO unit test for the property 'PostalCode'
        }

        /// <summary>
        /// Test the property 'City'
        /// </summary>
        [Fact]
        public void CityTest()
        {
            // TODO unit test for the property 'City'
        }

        /// <summary>
        /// Test the property 'State'
        /// </summary>
        [Fact]
        public void StateTest()
        {
            // TODO unit test for the property 'State'
        }

        /// <summary>
        /// Test the property 'Country'
        /// </summary>
        [Fact]
        public void CountryTest()
        {
            // TODO unit test for the property 'Country'
        }

        /// <summary>
        /// Test the property 'Phone'
        /// </summary>
        [Fact]
        public void PhoneTest()
        {
            // TODO unit test for the property 'Phone'
        }

        /// <summary>
        /// Test the property 'Email'
        /// </summary>
        [Fact]
        public void EmailTest()
        {
            // TODO unit test for the property 'Email'
        }

        /// <summary>
        /// Test the property 'Instructions'
        /// </summary>
        [Fact]
        public void InstructionsTest()
        {
            // TODO unit test for the property 'Instructions'
        }

        /// <summary>
        /// Test the property 'FacilityCode'
        /// </summary>
        [Fact]
        public void FacilityCodeTest()
        {
            // TODO unit test for the property 'FacilityCode'
        }

        /// <summary>
        /// Test the property 'LasershipCriticalPullTime'
        /// </summary>
        [Fact]
        public void LasershipCriticalPullTimeTest()
        {
            // TODO unit test for the property 'LasershipCriticalPullTime'
        }

        /// <summary>
        /// Test the property 'LasershipCriticalEntryTime'
        /// </summary>
        [Fact]
        public void LasershipCriticalEntryTimeTest()
        {
            // TODO unit test for the property 'LasershipCriticalEntryTime'
        }

        /// <summary>
        /// Test the property 'DeclarePieceAttributesSeparatelyForEveryShipment'
        /// </summary>
        [Fact]
        public void DeclarePieceAttributesSeparatelyForEveryShipmentTest()
        {
            // TODO unit test for the property 'DeclarePieceAttributesSeparatelyForEveryShipment'
        }

        /// <summary>
        /// Test the property 'AttrAlcohol'
        /// </summary>
        [Fact]
        public void AttrAlcoholTest()
        {
            // TODO unit test for the property 'AttrAlcohol'
        }

        /// <summary>
        /// Test the property 'AttrDryIce'
        /// </summary>
        [Fact]
        public void AttrDryIceTest()
        {
            // TODO unit test for the property 'AttrDryIce'
        }

        /// <summary>
        /// Test the property 'AttrHazmat'
        /// </summary>
        [Fact]
        public void AttrHazmatTest()
        {
            // TODO unit test for the property 'AttrHazmat'
        }

        /// <summary>
        /// Test the property 'AttrTwoPersons'
        /// </summary>
        [Fact]
        public void AttrTwoPersonsTest()
        {
            // TODO unit test for the property 'AttrTwoPersons'
        }

        /// <summary>
        /// Test the property 'AttrExplosive'
        /// </summary>
        [Fact]
        public void AttrExplosiveTest()
        {
            // TODO unit test for the property 'AttrExplosive'
        }

        /// <summary>
        /// Test the property 'AttrControlledSubstance'
        /// </summary>
        [Fact]
        public void AttrControlledSubstanceTest()
        {
            // TODO unit test for the property 'AttrControlledSubstance'
        }

        /// <summary>
        /// Test the property 'AttrRefrigerated'
        /// </summary>
        [Fact]
        public void AttrRefrigeratedTest()
        {
            // TODO unit test for the property 'AttrRefrigerated'
        }

        /// <summary>
        /// Test the property 'AttrPerishable'
        /// </summary>
        [Fact]
        public void AttrPerishableTest()
        {
            // TODO unit test for the property 'AttrPerishable'
        }

        /// <summary>
        /// Test the property 'AttrNoRTS'
        /// </summary>
        [Fact]
        public void AttrNoRTSTest()
        {
            // TODO unit test for the property 'AttrNoRTS'
        }
    }

}
