/*
 * ShipEngine API
 *
 * The version of the OpenAPI document: 1.1.202406212006
 * Contact: sales@shipengine.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using ShipEngineSDK.Client;
using ShipEngineSDK.Model;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text.Json;
using Xunit;

namespace ShipEngineSDK.Test.Model
{
    /// <summary>
    ///  Class for testing Carrier
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CarrierTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Carrier
        //private Carrier instance;

        public CarrierTests()
        {
            // TODO uncomment below to create an instance of Carrier
            //instance = new Carrier();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Carrier
        /// </summary>
        [Fact]
        public void CarrierInstanceTest()
        {
            // TODO uncomment below to test "IsType" Carrier
            //Assert.IsType<Carrier>(instance);
        }

        /// <summary>
        /// Test the property 'CarrierId'
        /// </summary>
        [Fact]
        public void CarrierIdTest()
        {
            // TODO unit test for the property 'CarrierId'
        }

        /// <summary>
        /// Test the property 'CarrierCode'
        /// </summary>
        [Fact]
        public void CarrierCodeTest()
        {
            // TODO unit test for the property 'CarrierCode'
        }

        /// <summary>
        /// Test the property 'AccountNumber'
        /// </summary>
        [Fact]
        public void AccountNumberTest()
        {
            // TODO unit test for the property 'AccountNumber'
        }

        /// <summary>
        /// Test the property 'RequiresFundedAmount'
        /// </summary>
        [Fact]
        public void RequiresFundedAmountTest()
        {
            // TODO unit test for the property 'RequiresFundedAmount'
        }

        /// <summary>
        /// Test the property 'Balance'
        /// </summary>
        [Fact]
        public void BalanceTest()
        {
            // TODO unit test for the property 'Balance'
        }

        /// <summary>
        /// Test the property 'Nickname'
        /// </summary>
        [Fact]
        public void NicknameTest()
        {
            // TODO unit test for the property 'Nickname'
        }

        /// <summary>
        /// Test the property 'FriendlyName'
        /// </summary>
        [Fact]
        public void FriendlyNameTest()
        {
            // TODO unit test for the property 'FriendlyName'
        }

        /// <summary>
        /// Test the property 'Primary'
        /// </summary>
        [Fact]
        public void PrimaryTest()
        {
            // TODO unit test for the property 'Primary'
        }

        /// <summary>
        /// Test the property 'HasMultiPackageSupportingServices'
        /// </summary>
        [Fact]
        public void HasMultiPackageSupportingServicesTest()
        {
            // TODO unit test for the property 'HasMultiPackageSupportingServices'
        }

        /// <summary>
        /// Test the property 'SupportsLabelMessages'
        /// </summary>
        [Fact]
        public void SupportsLabelMessagesTest()
        {
            // TODO unit test for the property 'SupportsLabelMessages'
        }

        /// <summary>
        /// Test the property 'DisabledByBillingPlan'
        /// </summary>
        [Fact]
        public void DisabledByBillingPlanTest()
        {
            // TODO unit test for the property 'DisabledByBillingPlan'
        }

        /// <summary>
        /// Test the property 'Services'
        /// </summary>
        [Fact]
        public void ServicesTest()
        {
            // TODO unit test for the property 'Services'
        }

        /// <summary>
        /// Test the property 'Packages'
        /// </summary>
        [Fact]
        public void PackagesTest()
        {
            // TODO unit test for the property 'Packages'
        }

        /// <summary>
        /// Test the property 'Options'
        /// </summary>
        [Fact]
        public void OptionsTest()
        {
            // TODO unit test for the property 'Options'
        }
    }

}