/*
 * ShipEngine API
 *
 * The version of the OpenAPI document: 1.1.202406212006
 * Contact: sales@shipengine.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using ShipEngineSDK.Client;
using ShipEngineSDK.Model;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text.Json;
using Xunit;

namespace ShipEngineSDK.Test.Model
{
    /// <summary>
    ///  Class for testing UpdateUpsSettingsRequestBody
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class UpdateUpsSettingsRequestBodyTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for UpdateUpsSettingsRequestBody
        //private UpdateUpsSettingsRequestBody instance;

        public UpdateUpsSettingsRequestBodyTests()
        {
            // TODO uncomment below to create an instance of UpdateUpsSettingsRequestBody
            //instance = new UpdateUpsSettingsRequestBody();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UpdateUpsSettingsRequestBody
        /// </summary>
        [Fact]
        public void UpdateUpsSettingsRequestBodyInstanceTest()
        {
            // TODO uncomment below to test "IsType" UpdateUpsSettingsRequestBody
            //Assert.IsType<UpdateUpsSettingsRequestBody>(instance);
        }

        /// <summary>
        /// Test the property 'Nickname'
        /// </summary>
        [Fact]
        public void NicknameTest()
        {
            // TODO unit test for the property 'Nickname'
        }

        /// <summary>
        /// Test the property 'IsPrimaryAccount'
        /// </summary>
        [Fact]
        public void IsPrimaryAccountTest()
        {
            // TODO unit test for the property 'IsPrimaryAccount'
        }

        /// <summary>
        /// Test the property 'PickupType'
        /// </summary>
        [Fact]
        public void PickupTypeTest()
        {
            // TODO unit test for the property 'PickupType'
        }

        /// <summary>
        /// Test the property 'UseCarbonNeutralShippingProgram'
        /// </summary>
        [Fact]
        public void UseCarbonNeutralShippingProgramTest()
        {
            // TODO unit test for the property 'UseCarbonNeutralShippingProgram'
        }

        /// <summary>
        /// Test the property 'UseGroundFreightPricing'
        /// </summary>
        [Fact]
        public void UseGroundFreightPricingTest()
        {
            // TODO unit test for the property 'UseGroundFreightPricing'
        }

        /// <summary>
        /// Test the property 'UseConsolidationServices'
        /// </summary>
        [Fact]
        public void UseConsolidationServicesTest()
        {
            // TODO unit test for the property 'UseConsolidationServices'
        }

        /// <summary>
        /// Test the property 'UseOrderNumberOnMailInnovationsLabels'
        /// </summary>
        [Fact]
        public void UseOrderNumberOnMailInnovationsLabelsTest()
        {
            // TODO unit test for the property 'UseOrderNumberOnMailInnovationsLabels'
        }

        /// <summary>
        /// Test the property 'MailInnovationsEndorsement'
        /// </summary>
        [Fact]
        public void MailInnovationsEndorsementTest()
        {
            // TODO unit test for the property 'MailInnovationsEndorsement'
        }

        /// <summary>
        /// Test the property 'MailInnovationsCostCenter'
        /// </summary>
        [Fact]
        public void MailInnovationsCostCenterTest()
        {
            // TODO unit test for the property 'MailInnovationsCostCenter'
        }

        /// <summary>
        /// Test the property 'UseNegotiatedRates'
        /// </summary>
        [Fact]
        public void UseNegotiatedRatesTest()
        {
            // TODO unit test for the property 'UseNegotiatedRates'
        }

        /// <summary>
        /// Test the property 'AccountPostalCode'
        /// </summary>
        [Fact]
        public void AccountPostalCodeTest()
        {
            // TODO unit test for the property 'AccountPostalCode'
        }

        /// <summary>
        /// Test the property 'Invoice'
        /// </summary>
        [Fact]
        public void InvoiceTest()
        {
            // TODO unit test for the property 'Invoice'
        }
    }

}